import{a as I}from"./Error-1dfe2922.js";import{t as v,r as _}from"./typedArrayUtil-4015bf74.js";import{c as b,s as D}from"./jsonUtils-196b5f3d.js";import{z as O}from"./Extent-54ef1174.js";import{t as q,o as M,X as Q}from"./featureConversionUtils-99b22ab9.js";import{t as Z,n as $}from"./objectIdUtils-789e911a.js";import{u as A}from"./FeatureStore-8d8028f1.js";import{f as E,g as j}from"./projectionSupport-22303543.js";import{Y as k}from"./QueryEngine-36d79e25.js";import{i as C,o as P,a as G}from"./clientSideDefaults-ba31a7fc.js";import{w as z,a as g,m as T,f as x,g as w}from"./sourceUtils-9a727634.js";import{r as L}from"./FieldsIndex-7523f868.js";import{i as W}from"./fieldType-36e8171c.js";import{M as B}from"./fieldUtils-75feb382.js";import"./string-7d6c8f5c.js";import"./Polyline-d942e774.js";import"./cast-7ef3a066.js";import"./ArrayPool-45db95ab.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e323addc.js";import"./OptimizedFeature-aa2e72dc.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Evented-7dfb249a.js";import"./aaBoundingBox-10130714.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./aaBoundingRect-e7f76732.js";import"./PooledRBush-5a9664c5.js";import"./quickselect-322ec8e1.js";import"./centroid-e729b670.js";import"./projection-ef32d842.js";import"./preload-helper-101896b7.js";import"./unitUtils-58dc72ed.js";import"./jsonMap-c8081704.js";import"./SimpleObservable-ddf0ceba.js";import"./mat4-62d5e6a4.js";import"./assets-6d4d2dad.js";import"./request-4f5c54dd.js";import"./zscale-65468675.js";import"./json-48e3ea08.js";import"./MemCache-15515535.js";import"./normalizeUtils-9ff08cf4.js";import"./geometry-22feb2bb.js";import"./typeUtils-17403a33.js";import"./QueryEngineResult-4a6b9e23.js";import"./quantizationUtils-14228c88.js";import"./ItemCache-eb0f81ed.js";import"./WhereClause-f3484bdd.js";import"./utils-e34e3efd.js";import"./generateRendererUtils-8612ca33.js";import"./colorRamps-68d0ae1f.js";import"./Color-7a3d8c62.js";import"./colorUtils-639f4d25.js";import"./enumeration-cda3949b.js";import"./Symbol-6522d2f3.js";import"./utils-b002061b.js";import"./arcadeOnDemand-797f4f1c.js";import"./QueryEngineCapabilities-42e44ded.js";import"./timeSupport-2b82e569.js";import"./Scheduler-5da9d6c9.js";import"./reactiveUtils-b911287d.js";import"./defaultsJSON-b087dd4d.js";const U=O,H={xmin:-180,ymin:-90,xmax:180,ymax:90,spatialReference:O},V={hasAttachments:!1,capabilities:"query, editing, create, delete, update",useStandardizedQueries:!0,supportsCoordinatesQuantization:!0,supportsReturningQueryGeometry:!0,advancedQueryCapabilities:{supportsQueryAttachments:!1,supportsStatistics:!0,supportsPercentileStatistics:!0,supportsReturningGeometryCentroid:!0,supportsQueryWithDistance:!0,supportsDistinct:!0,supportsReturningQueryExtent:!0,supportsReturningGeometryProperties:!1,supportsHavingClause:!0,supportsOrderBy:!0,supportsPagination:!0,supportsQueryWithResultType:!1,supportsSqlExpression:!0,supportsDisjointSpatialRel:!0}};function X(c){return D(c)?c.z!=null:!!c.hasZ}function Y(c){return D(c)?c.m!=null:!!c.hasM}class nt{constructor(){this._queryEngine=null,this._nextObjectId=null}destroy(){this._queryEngine&&this._queryEngine&&this._queryEngine.destroy(),this._queryEngine=this._fieldsIndex=this._createDefaultAttributes=null}async load(e){const t=[],{features:a}=e,i=this._inferLayerProperties(a,e.fields),l=e.fields||[],p=e.hasM!=null?e.hasM:i.hasM,f=e.hasZ!=null?e.hasZ:i.hasZ,m=!e.spatialReference&&!i.spatialReference,u=m?U:e.spatialReference||i.spatialReference,o=m?H:null,r=e.geometryType||i.geometryType,y=!r;let d=e.objectIdField||i.objectIdField,n=e.timeInfo;if(!y&&(m&&t.push({name:"feature-layer:spatial-reference-not-found",message:"Spatial reference not provided or found in features. Defaults to WGS84"}),!r))throw new I("feature-layer:missing-property","geometryType not set and couldn't be inferred from the provided features");if(!d)throw new I("feature-layer:missing-property","objectIdField not set and couldn't be found in the provided fields");if(i.objectIdField&&d!==i.objectIdField&&(t.push({name:"feature-layer:duplicated-oid-field",message:`Provided objectIdField "${d}" doesn't match the field name "${i.objectIdField}", found in the provided fields`}),d=i.objectIdField),d&&!i.objectIdField){let s=null;l.some(h=>h.name===d&&(s=h,!0))?(s.type="esriFieldTypeOID",s.editable=!1,s.nullable=!1):l.unshift({alias:d,name:d,type:"esriFieldTypeOID",editable:!1,nullable:!1})}for(const s of l){if(s.name==null&&(s.name=s.alias),s.alias==null&&(s.alias=s.name),!s.name)throw new I("feature-layer:invalid-field-name","field name is missing",{field:s});if(s.name===d&&(s.type="esriFieldTypeOID"),!W.jsonValues.includes(s.type))throw new I("feature-layer:invalid-field-type",`invalid type for field "${s.name}"`,{field:s})}const F={};for(const s of l)if(s.type!=="esriFieldTypeOID"&&s.type!=="esriFieldTypeGlobalID"){const h=B(s);h!==void 0&&(F[s.name]=h)}if(this._fieldsIndex=new L(l),this._createDefaultAttributes=C(F,d),n){if(n.startTimeField){const s=this._fieldsIndex.get(n.startTimeField);s?(n.startTimeField=s.name,s.type="esriFieldTypeDate"):n.startTimeField=null}if(n.endTimeField){const s=this._fieldsIndex.get(n.endTimeField);s?(n.endTimeField=s.name,s.type="esriFieldTypeDate"):n.endTimeField=null}if(n.trackIdField){const s=this._fieldsIndex.get(n.trackIdField);s?n.trackIdField=s.name:(n.trackIdField=null,t.push({name:"feature-layer:invalid-timeInfo-trackIdField",message:"trackIdField is missing",details:{timeInfo:n}}))}n.startTimeField||n.endTimeField||(t.push({name:"feature-layer:invalid-timeInfo",message:"startTimeField and endTimeField are missing or invalid",details:{timeInfo:n}}),n=null)}const R={warnings:t,featureErrors:[],layerDefinition:{...V,drawingInfo:P(r),templates:G(F),extent:o,geometryType:r,objectIdField:d,fields:l,hasZ:!!f,hasM:!!p,timeInfo:n},assignedObjectIds:{}};if(this._queryEngine=new k({fields:l,geometryType:r,hasM:p,hasZ:f,objectIdField:d,spatialReference:u,featureStore:new A({geometryType:r,hasM:p,hasZ:f}),timeInfo:n,cacheSpatialQueries:!0}),!a||!a.length)return this._nextObjectId=Z,R;const S=$(d,a);return this._nextObjectId=S+1,await E(a,u),this._loadInitialFeatures(R,a)}async applyEdits(e){const{spatialReference:t,geometryType:a}=this._queryEngine;return await Promise.all([z(t,a),E(e.adds,t),E(e.updates,t)]),this._applyEdits(e)}queryFeatures(e,t={}){return this._queryEngine.executeQuery(e,t.signal)}queryFeatureCount(e,t={}){return this._queryEngine.executeQueryForCount(e,t.signal)}queryObjectIds(e,t={}){return this._queryEngine.executeQueryForIds(e,t.signal)}queryExtent(e,t={}){return this._queryEngine.executeQueryForExtent(e,t.signal)}querySnapping(e,t={}){return this._queryEngine.executeQueryForSnapping(e,t.signal)}_inferLayerProperties(e,t){let a,i,l=null,p=null,f=null;for(const m of e){const u=m.geometry;if(!v(u)&&(l||(l=b(u)),p||(p=u.spatialReference),a==null&&(a=X(u)),i==null&&(i=Y(u)),l&&p&&a!=null&&i!=null))break}if(t&&t.length){let m=null;t.some(u=>{const o=u.type==="esriFieldTypeOID",r=!u.type&&u.name&&u.name.toLowerCase()==="objectid";return m=u,o||r})&&(f=m.name)}return{geometryType:l,spatialReference:p,objectIdField:f,hasM:i,hasZ:a}}_loadInitialFeatures(e,t){const{geometryType:a,hasM:i,hasZ:l,objectIdField:p,spatialReference:f,featureStore:m}=this._queryEngine,u=[];for(const o of t){if(o.uid!=null&&(e.assignedObjectIds[o.uid]=-1),o.geometry&&a!==b(o.geometry)){e.featureErrors.push(g("Incorrect geometry type."));continue}const r=this._createDefaultAttributes(),y=T(this._fieldsIndex,r,o.attributes,!0,e.warnings);y?e.featureErrors.push(y):(this._assignObjectId(r,o.attributes,!0),o.attributes=r,o.uid!=null&&(e.assignedObjectIds[o.uid]=o.attributes[p]),_(o.geometry)&&(o.geometry=j(o.geometry,o.geometry.spatialReference,f)),u.push(o))}if(m.addMany(q([],u,a,l,i,p)),e.layerDefinition.extent=this._queryEngine.fullExtent,e.layerDefinition.timeInfo){const{start:o,end:r}=this._queryEngine.timeExtent;e.layerDefinition.timeInfo.timeExtent=[o,r]}return e}_applyEdits(e){const{adds:t,updates:a,deletes:i}=e,l={addResults:[],deleteResults:[],updateResults:[],uidToObjectId:{}};if(t&&t.length&&this._applyAddEdits(l,t),a&&a.length&&this._applyUpdateEdits(l,a),i&&i.length){for(const p of i)l.deleteResults.push(x(p));this._queryEngine.featureStore.removeManyById(i)}return{fullExtent:this._queryEngine.fullExtent,featureEditResults:l}}_applyAddEdits(e,t){const{addResults:a}=e,{geometryType:i,hasM:l,hasZ:p,objectIdField:f,spatialReference:m,featureStore:u}=this._queryEngine,o=[];for(const r of t){if(r.geometry&&i!==b(r.geometry)){a.push(g("Incorrect geometry type."));continue}const y=this._createDefaultAttributes(),d=T(this._fieldsIndex,y,r.attributes);if(d)a.push(d);else{if(this._assignObjectId(y,r.attributes),r.attributes=y,r.uid!=null){const n=r.attributes[f];e.uidToObjectId[r.uid]=n}if(_(r.geometry)){const n=r.geometry.spatialReference??m;r.geometry=j(w(r.geometry,n),n,m)}o.push(r),a.push(x(r.attributes[f]))}}u.addMany(q([],o,i,p,l,f))}_applyUpdateEdits({updateResults:e},t){const{geometryType:a,hasM:i,hasZ:l,objectIdField:p,spatialReference:f,featureStore:m}=this._queryEngine;for(const u of t){const{attributes:o,geometry:r}=u,y=o&&o[p];if(y==null){e.push(g(`Identifier field ${p} missing`));continue}if(!m.has(y)){e.push(g(`Feature with object id ${y} missing`));continue}const d=M(m.getFeature(y),a,l,i);if(_(r)){if(a!==b(r)){e.push(g("Incorrect geometry type."));continue}const n=r.spatialReference??f;d.geometry=j(w(r,n),n,f)}if(o){const n=T(this._fieldsIndex,d.attributes,o);if(n){e.push(n);continue}}m.add(Q(d,a,l,i,p)),e.push(x(y))}}_assignObjectId(e,t,a=!1){const i=this._queryEngine.objectIdField;a&&t&&isFinite(t[i])?e[i]=t[i]:e[i]=this._nextObjectId++}}export{nt as default};
