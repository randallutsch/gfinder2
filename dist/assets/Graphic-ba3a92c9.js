import{i as m,e as i,y as p,n as u,l as y}from"./cast-34ff1fab.js";import{i as h}from"./geometry-1b3a0099.js";import{k as g}from"./PopupTemplate-8759f34d.js";import{j as f}from"./symbols-0eeb49ca.js";import{i as c}from"./Clonable-a26a28b0.js";import{r as a}from"./typedArrayUtil-6bfe4dae.js";import"./ensureType-abaf235a.js";import{v as n}from"./jsonUtils-eb956695.js";import"./string-46813dd9.js";import"./Error-e5869661.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-281d25c9.js";import"./Extent-b8913cd1.js";import"./Polyline-7684a66d.js";import"./typeUtils-0cf27003.js";import"./jsonMap-92eea954.js";import"./Collection-3317d203.js";import"./Evented-fac53f7f.js";import"./SimpleObservable-f97014ec.js";import"./fieldUtils-c253753a.js";import"./preload-helper-596b5639.js";import"./arcadeOnDemand-c5034a8b.js";import"./enumeration-e40d8895.js";import"./number-4b1bfb24.js";import"./locale-30120714.js";import"./Identifiable-016ad07d.js";import"./CIMSymbol-6c8aee70.js";import"./Symbol-8a110cc7.js";import"./Color-0f9fdd46.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-ea6b845d.js";import"./SimpleFillSymbol-80498a78.js";import"./aaBoundingBox-77ee83e3.js";import"./request-c6faf466.js";import"./persistableUrlUtils-3427b748.js";import"./collectionUtils-23cca63a.js";import"./Portal-d13c5d2a.js";import"./Loadable-3c0fb2d0.js";import"./Promise-19e65545.js";import"./PortalGroup-506cda94.js";import"./PortalUser-12cb329a.js";function b(t){if(!t)return null;const e={};for(const o in t){const s=n(t[o]);s&&(e[o]=s)}return Object.keys(e).length!==0?e:null}function d(t){if(!a(t))return null;const e={};for(const o in t){const s=t[o];s&&(e[o]=s.toJSON())}return Object.keys(e).length!==0?e:null}let r=class extends c(y){constructor(...t){super(...t),this.isAggregate=!1,this.layer=null,this.popupTemplate=null,this.sourceLayer=null,Object.defineProperty(this,"uid",{value:m(),configurable:!0})}normalizeCtorArgs(t,e,o,s){return t&&!t.declaredClass?t:{geometry:t,symbol:e,attributes:o,popupTemplate:s}}set aggregateGeometries(t){const e=this._get("aggregateGeometries");JSON.stringify(e)!==JSON.stringify(t)&&this._set("aggregateGeometries",t)}set attributes(t){const e=this._get("attributes");e!==t&&(this._set("attributes",t),this._notifyLayer("attributes",e,t))}set geometry(t){const e=this._get("geometry");e!==t&&(this._set("geometry",t),this._notifyLayer("geometry",e,t))}set symbol(t){const e=this._get("symbol");e!==t&&(this._set("symbol",t),this._notifyLayer("symbol",e,t))}set visible(t){const e=this._get("visible");e!==t&&(this._set("visible",t),this._notifyLayer("visible",e,t))}getEffectivePopupTemplate(t=!1){if(this.popupTemplate)return this.popupTemplate;for(const e of[this.sourceLayer,this.layer])if(e){if("popupTemplate"in e&&e.popupTemplate)return e.popupTemplate;if(t&&"defaultPopupTemplate"in e&&a(e.defaultPopupTemplate))return e.defaultPopupTemplate}return null}getAttribute(t){var e;return(e=this.attributes)==null?void 0:e[t]}setAttribute(t,e){if(this.attributes){const o=this.getAttribute(t);this.attributes[t]=e,this._notifyLayer("attributes",o,e,t)}else this.attributes={[t]:e},this._notifyLayer("attributes",void 0,e,t)}getObjectId(){return this.sourceLayer&&"objectIdField"in this.sourceLayer&&this.sourceLayer.objectIdField?this.getAttribute(this.sourceLayer.objectIdField):null}toJSON(){return{aggregateGeometries:d(this.aggregateGeometries),geometry:a(this.geometry)?this.geometry.toJSON():null,symbol:a(this.symbol)?this.symbol.toJSON():null,attributes:{...this.attributes},popupTemplate:this.popupTemplate&&this.popupTemplate.toJSON()}}notifyGeometryChanged(){this._notifyLayer("geometry",this.geometry,this.geometry)}notifyMeshTransformChanged(){a(this.geometry)&&this.geometry.type==="mesh"&&this._notifyLayer("transform",this.geometry.transform,this.geometry.transform)}_notifyLayer(t,e,o,s){if(!this.layer||!("graphicChanged"in this.layer))return;const l={graphic:this,property:t,oldValue:e,newValue:o};t==="attributes"&&(l.attributeName=s),this.layer.graphicChanged(l)}};i([p({value:null,json:{read:b}})],r.prototype,"aggregateGeometries",null),i([p({value:null})],r.prototype,"attributes",null),i([p({value:null,types:h,json:{read:n}})],r.prototype,"geometry",null),i([p({type:Boolean})],r.prototype,"isAggregate",void 0),i([p({clonable:"reference"})],r.prototype,"layer",void 0),i([p({type:g})],r.prototype,"popupTemplate",void 0),i([p({clonable:"reference"})],r.prototype,"sourceLayer",void 0),i([p({value:null,types:f})],r.prototype,"symbol",null),i([p({type:Boolean,value:!0})],r.prototype,"visible",null),r=i([u("esri.Graphic")],r),function(t){t.generateUID=m}(r||(r={}));const mt=r;export{mt as default};
