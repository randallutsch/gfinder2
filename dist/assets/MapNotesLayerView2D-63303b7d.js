import{e as f,n as w}from"./cast-34ff1fab.js";import y from"./Graphic-94225496.js";import{j as _}from"./Collection-3317d203.js";import{r as m,t as V}from"./typedArrayUtil-6bfe4dae.js";import{l as h,h as a,a as v}from"./reactiveUtils-aec98ee9.js";import"./Error-e5869661.js";import"./ensureType-abaf235a.js";import"./string-46813dd9.js";import{i as C}from"./utils-8ec30506.js";import{r as b}from"./GroupContainer-e96ea2e1.js";import{y as H,u as T}from"./LayerView-3939a1f4.js";import{i as c}from"./GraphicContainer-1e68e6a4.js";import{o as g}from"./BaseGraphicContainer-aef08978.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-281d25c9.js";import"./geometry-1b3a0099.js";import"./Extent-b8913cd1.js";import"./Polyline-7684a66d.js";import"./typeUtils-0cf27003.js";import"./jsonMap-92eea954.js";import"./PopupTemplate-7faa8256.js";import"./Clonable-a26a28b0.js";import"./fieldUtils-ba80cc48.js";import"./preload-helper-596b5639.js";import"./arcadeOnDemand-8d1e3277.js";import"./enumeration-e40d8895.js";import"./number-4b1bfb24.js";import"./locale-30120714.js";import"./Identifiable-016ad07d.js";import"./symbols-c29482ec.js";import"./CIMSymbol-31fb7ca2.js";import"./Symbol-8a110cc7.js";import"./Color-0f9fdd46.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-ea6b845d.js";import"./SimpleFillSymbol-80498a78.js";import"./aaBoundingBox-77ee83e3.js";import"./request-0ae6f728.js";import"./persistableUrlUtils-94eb42ca.js";import"./collectionUtils-23cca63a.js";import"./Portal-ed3455de.js";import"./Loadable-3c0fb2d0.js";import"./Promise-19e65545.js";import"./PortalGroup-506cda94.js";import"./PortalUser-d46abb74.js";import"./jsonUtils-eb956695.js";import"./Evented-fac53f7f.js";import"./SimpleObservable-f97014ec.js";import"./mat3f32-d3d088e8.js";import"./parser-6760a715.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-7483d64a.js";import"./Utils-a3ec9931.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-a2ec75db.js";import"./context-util-2080d28f.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./WGLContainer-82b81574.js";import"./mat3-45e3f2eb.js";import"./vec2f32-461e65a9.js";import"./pixelUtils-3328f7e1.js";import"./vec2f64-e0301652.js";import"./VertexArrayObject-945630a0.js";import"./ProgramTemplate-49a2b79c.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./vec2-f978aef8.js";import"./featureConversionUtils-9849a680.js";import"./OptimizedFeature-06185297.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./HandleOwner-9428adb4.js";import"./ExpandedCIM-0d480c3a.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-71c1e25d.js";import"./mat2d-80bd93af.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-68567b49.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-d41dfdff.js";import"./normalizeUtils-2ed0f8c8.js";import"./utils-97034790.js";import"./projectionSupport-9e49ecb5.js";import"./projection-b78b11c8.js";import"./unitUtils-2906b0b4.js";import"./assets-4600b25c.js";import"./zscale-750d6efd.js";import"./json-48e3ea08.js";import"./labelingInfo-ee2310ec.js";import"./labelUtils-cfa36e70.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-755eca46.js";import"./FeatureContainer-448644b8.js";import"./TileContainer-aa053718.js";import"./TileKey-c8cdd066.js";import"./Queue-bd70231f.js";import"./visualVariablesUtils-63ed6b67.js";import"./visualVariablesUtils-be33a1d6.js";import"./lengthUtils-02fceda8.js";import"./capabilities-41f4ea67.js";import"./Matcher-1be5e00f.js";import"./TileStrategy-8b10579a.js";import"./TileStore-fce2f495.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-b1372d7c.js";import"./TimeExtent-b83e45a0.js";import"./Field-db318fdd.js";import"./fieldType-11b4c3ca.js";import"./tileUtils-47b0feb0.js";import"./TileClipper-53cdd114.js";import"./Geometry-daada628.js";import"./LRUCache-9d77066f.js";import"./MemCache-97cd02d3.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-a2eec9c1.js";import"./schemaUtils-1965ab44.js";import"./LayerFloorInfo-21f09518.js";import"./diffUtils-67450e3a.js";import"./createSymbolSchema-7219e927.js";import"./rendererUtils-cc7003e2.js";import"./FeatureReductionLayer-51fa194f.js";import"./BlendLayer-1dfdcb30.js";import"./UniqueValueRenderer-f157b5bd.js";import"./LegendOptions-8b163282.js";import"./colorRamps-d6116b89.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-05c96a64.js";import"./jsonUtils-2845fac1.js";import"./DictionaryLoader-b60365f9.js";import"./deprecate-c2edfb4d.js";import"./OperationalLayer-22b6ebd6.js";import"./ElevationInfo-d6cce4ca.js";import"./util-dd3059e1.js";import"./ComputedAttributeStorage-da36942e.js";import"./FeatureSetReader-4f707d3c.js";import"./centroid-5232e2a4.js";import"./FieldsIndex-105fbc68.js";import"./vec3f32-4322908d.js";const d="sublayers",n="layerView",I=Object.freeze({remove(){},pause(){},resume(){}});let l=class extends H(T){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new b}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){m(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():m(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(m(this._graphicsViewsFeatureCollectionMap)){const p=this._graphicsViewsFeatureCollectionMap.get(r);for(const o of e)!o.popupTemplate&&p.popupTemplate&&(o.popupTemplate=p.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof y?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):_.isCollection(i)&&(t=i.map(r=>r&&r.uid).toArray()),t=t.filter(r=>r!=null),t.length?(this._addHighlight(t),{remove:()=>{this._removeHighlight(t)}}):I}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(m(r)&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const p=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:p});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.handles.add([h(()=>e.visible,s=>o.container.visible=s,a),h(()=>o.updating,()=>this.notifyChange("updating"),a)],n)}this._updateHighlight()}else m(this.layer.sublayers)&&this.handles.add(v(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(n);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),V(this.layer.sublayers))return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const p=new C,o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.handles.add([e.on("graphic-update",s.graphicUpdateHandler),h(()=>e.visible,u=>s.container.visible=u,a),h(()=>s.updating,()=>this.notifyChange("updating"),a)],n),p.addChild(s.container),this.container.addChild(p),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};l=f([w("esri.views.2d.layers.MapNotesLayerView2D")],l);const gr=l;export{gr as default};
