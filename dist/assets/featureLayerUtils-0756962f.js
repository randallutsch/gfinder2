import{S as K,t as F,r as $}from"./typedArrayUtil-6bfe4dae.js";import{s as R,a as m}from"./Error-e5869661.js";import{x as f,E as D}from"./promiseUtils-281d25c9.js";import{i as w}from"./originUtils-1469eeaf.js";import j from"./FeatureLayer-51d11ec6.js";import{m as _}from"./arcgisLayerUrl-efba9d7a.js";import{r as q}from"./fetchService-2795309c.js";import{l as z,o as M}from"./layerUtils-6996b9ea.js";import{j as U}from"./Portal-d13c5d2a.js";import Y from"./PortalItem-a267e3e1.js";import{o as v}from"./jsonContext-9e6fe4f6.js";import{i as c,a as B,c as g,f as n}from"./portalItemUtils-a176d8fc.js";import"./string-46813dd9.js";import"./multiOriginJSONSupportUtils-c978f4c3.js";import"./preload-helper-596b5639.js";import"./cast-34ff1fab.js";import"./ensureType-abaf235a.js";import"./nextTick-3ee5a785.js";import"./PopupTemplate-8759f34d.js";import"./Clonable-a26a28b0.js";import"./Collection-3317d203.js";import"./Evented-fac53f7f.js";import"./SimpleObservable-f97014ec.js";import"./Extent-b8913cd1.js";import"./fieldUtils-c253753a.js";import"./arcadeOnDemand-c5034a8b.js";import"./geometry-1b3a0099.js";import"./Polyline-7684a66d.js";import"./typeUtils-0cf27003.js";import"./jsonMap-92eea954.js";import"./enumeration-e40d8895.js";import"./number-4b1bfb24.js";import"./locale-30120714.js";import"./Identifiable-016ad07d.js";import"./UniqueValueRenderer-07be7be0.js";import"./symbols-0eeb49ca.js";import"./CIMSymbol-6c8aee70.js";import"./Symbol-8a110cc7.js";import"./Color-0f9fdd46.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-ea6b845d.js";import"./SimpleFillSymbol-80498a78.js";import"./aaBoundingBox-77ee83e3.js";import"./request-c6faf466.js";import"./persistableUrlUtils-3427b748.js";import"./collectionUtils-23cca63a.js";import"./LegendOptions-8b163282.js";import"./reactiveUtils-aec98ee9.js";import"./diffUtils-67450e3a.js";import"./colorRamps-d6116b89.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-ba3a92c9.js";import"./jsonUtils-eb956695.js";import"./Loadable-3c0fb2d0.js";import"./Promise-19e65545.js";import"./PortalGroup-506cda94.js";import"./PortalUser-12cb329a.js";import"./compilerUtils-05c96a64.js";import"./lengthUtils-02fceda8.js";import"./unitUtils-2906b0b4.js";import"./jsonUtils-b9ebb089.js";import"./styleUtils-ea2c30a4.js";import"./jsonUtils-30a58fb0.js";import"./DictionaryLoader-076d7343.js";import"./LRUCache-9d77066f.js";import"./MemCache-97cd02d3.js";import"./deprecate-c2edfb4d.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./MultiOriginJSONSupport-98bacd7d.js";import"./LayerFloorInfo-21f09518.js";import"./FeatureLayerBase-08ed5a89.js";import"./Field-db318fdd.js";import"./fieldType-11b4c3ca.js";import"./HeightModelInfo-2307586e.js";import"./OperationalLayer-421969eb.js";import"./TimeExtent-b83e45a0.js";import"./ElevationInfo-7059590d.js";import"./RelationshipQuery-a9eb59b9.js";import"./Query-394dcfc7.js";import"./FullTextSearch-7a786b52.js";import"./Layer-685ea357.js";import"./HandleOwner-9428adb4.js";import"./workers-6a283d68.js";import"./Connection-3d967827.js";import"./Queue-bd70231f.js";import"./assets-544006ef.js";import"./intl-1561e875.js";import"./messages-fe8e2c1f.js";import"./editsZScale-ea881b08.js";import"./queryZScale-785f7a48.js";import"./zscale-750d6efd.js";import"./FeatureSet-b61b4ed5.js";import"./APIKeyMixin-dfeaf1ef.js";import"./ArcGISService-6da49723.js";import"./BlendLayer-1dfdcb30.js";import"./parser-6760a715.js";import"./mat4-62d5e6a4.js";import"./CustomParametersMixin-190de352.js";import"./EditBusLayer-e5ae410e.js";import"./FeatureReductionLayer-9b4d60f8.js";import"./labelingInfo-2aefe891.js";import"./labelUtils-cfa36e70.js";import"./defaultsJSON-b087dd4d.js";import"./OrderedLayer-1b69d825.js";import"./PortalLayer-10051047.js";import"./asyncUtils-64877ef6.js";import"./RefreshableLayer-d1776f5f.js";import"./ScaleRangeLayer-d814fce3.js";import"./TemporalLayer-b5c0f8d2.js";import"./TimeInfo-5a12a645.js";import"./FeatureTemplate-f1076210.js";import"./FeatureType-b0584768.js";import"./fieldProperties-2bcd082f.js";import"./FieldsIndex-bec5c377.js";import"./versionUtils-053df52a.js";import"./styleUtils-e7c24653.js";import"./TopFeaturesQuery-80c6fd7d.js";import"./popupUtils-6413f999.js";import"./projection-0e524eaf.js";const C=R.getLogger("esri.layers.FeatureLayer"),d="Feature Service";function u(t,r){return`Layer (title: ${t.title}, id: ${t.id}) of type '${t.declaredClass}' ${r}`}function E(t,r){if(r.type!==d)throw new m("feature-layer:portal-item-wrong-type",u(t,`should have portal item of type "${d}"`))}async function J(t){if(await t.load(),z(t))throw new m("feature-layer:save",u(t,"using an in-memory source cannot be saved to a portal item"))}function G(t,r){let a=(t.messages??[]).filter(({type:o})=>o==="error").map(({name:o,message:i,details:e})=>new m(o,i,e));if(r!=null&&r.ignoreUnsupported&&(a=a.filter(({name:o})=>o!=="layer:unsupported"&&o!=="symbol:unsupported"&&o!=="symbol-layer:unsupported"&&o!=="property:unsupported"&&o!=="url:unsupported")),a.length>0)throw new m("feature-layer:save","Failed to save feature layer due to unsupported or invalid content. See 'details.errors' for more detailed information",{errors:a})}async function h(t,r,a){"beforeSave"in t&&typeof t.beforeSave=="function"&&await t.beforeSave();const o=t.write({},r);return G(r,a),o}function N(t){const{layer:r,layerJSON:a}=t;return r.isTable?{layers:[],tables:[a]}:{layers:[a],tables:[]}}function b(t){c(t,n.JSAPI),t.typeKeywords&&(t.typeKeywords=t.typeKeywords.filter((r,a,o)=>o.indexOf(r)===a))}function Z(t){const r=t.portalItem;if(!r)throw C.error("save: requires the portalItem property to be set"),new m("feature-layer:portal-item-not-set",u(t,"requires the portalItem property to be set"));if(!r.loaded)throw new m("feature-layer:portal-item-not-loaded",u(t,"cannot be saved to a portal item that does not exist or is inaccessible"));E(t,r)}async function O(t,r){return/\/\d+\/?$/.test(t.url??"")?N(r[0]):k(t,r)}async function k(t,r){const{layer:{url:a,customParameters:o,apiKey:i}}=r[0];let e=await t.fetchData("json");e&&e.layers!=null&&e.tables!=null||(e=await H(e,{url:a??"",customParameters:o,apiKey:i},r.map(p=>p.layer.layerId)));for(const p of r)P(p.layer,p.layerJSON,e);return e}async function H(t,r,a){var o,i;t||(t={}),(o=t).layers||(o.layers=[]),(i=t).tables||(i.tables=[]);const{url:e,customParameters:p,apiKey:s}=r,{serviceJSON:l,layersJSON:y}=await q(e,{customParameters:p,apiKey:s}),S=x(t.layers,l.layers,a),I=x(t.tables,l.tables,a);t.layers=S.itemResources,t.tables=I.itemResources;const T=[...S.added,...I.added],L=y?[...y.layers,...y.tables]:[];return await Q(t,T,e,L),t}function x(t,r,a){const o=K(t,r,(e,p)=>e.id===p.id);t=t.filter(e=>!o.removed.some(p=>p.id===e.id));const i=o.added.map(({id:e})=>({id:e}));return i.forEach(({id:e})=>{t.push({id:e})}),{itemResources:t,added:i.filter(({id:e})=>!a.includes(e))}}async function Q(t,r,a,o){const i=r.map(({id:e})=>new j({url:a,layerId:e,sourceJSON:o.find(({id:p})=>p===e)}));await D(i.map(e=>e.load())),i.forEach(e=>{const{layerId:p,loaded:s,defaultPopupTemplate:l}=e;!s||F(l)||P(e,{id:p,popupInfo:l.toJSON()},t)})}function P(t,r,a){t.isTable?A(a.tables,r):A(a.layers,r)}function A(t,r){if(!t)return;const a=t.findIndex(({id:o})=>o===r.id);a===-1?t.push(r):t[a]=r}function V(t){const{portalItem:r}=t;return M(t)&&!t.dynamicDataSource&&!!(r!=null&&r.loaded)&&r.type===d}async function W(t){if(!(t!=null&&t.length))throw new m("feature-layer-utils-saveall:missing-parameters","'layers' array should contain at least one feature layer");await Promise.all(t.map(o=>o.load()));for(const o of t)if(!V(o))throw new m("feature-layer-utils-saveall:invalid-parameters",`'layers' array should only contain layers or tables in a feature service loaded from 'Feature Service' item. ${u(o,"does not conform")}`,{layer:o});const r=t.map(o=>o.portalItem.id);if(new Set(r).size>1)throw new m("feature-layer-utils-saveall:invalid-parameters","All layers in the 'layers' array should be loaded from the same portal item");const a=t.map(o=>o.layerId);if(new Set(a).size!==a.length)throw new m("feature-layer-utils-saveall:invalid-parameters","'layers' array should contain only one instance each of layer or table in a feature service")}function X(t,r){var a,o;let i=Y.from(r);return i.id&&(i=i.clone(),i.id=null),(a=i).type??(a.type=d),(o=i).portal??(o.portal=U.getDefault()),E(t,i),i}async function tt(t,r){const{url:a,layerId:o,title:i,fullExtent:e,isTable:p}=t,s=_(a),l=$(s)&&s.serverType==="FeatureServer";r.url=l?a:`${a}/${o}`,r.title||(r.title=i),r.extent=null,!p&&$(e)&&(r.extent=await B(e)),g(r,n.METADATA),g(r,n.MULTI_LAYER),c(r,n.SINGLE_LAYER),p&&c(r,n.TABLE),b(r)}async function rt(t,r,a){var i;const o=t.portal;await(o==null?void 0:o._signIn()),await((i=o==null?void 0:o.user)==null?void 0:i.addItem({item:t,data:r,folder:a==null?void 0:a.folder}))}const So=f(ot);async function ot(t,r){await J(t),Z(t);const a=t.portalItem,o=v(a),i=await h(t,o,r),e=await O(a,[{layer:t,layerJSON:i}]);return b(a),await a.update({data:e}),w(o),a}const Io=f(async(t,r)=>{await W(t);const a=t[0].portalItem,o=v(a),i=await Promise.all(t.map(p=>h(p,o,r))),e=await O(a,t.map((p,s)=>({layer:p,layerJSON:i[s]})));return b(a),await a.update({data:e}),await Promise.all(t.slice(1).map(p=>p.portalItem.reload())),w(o),a.clone()}),$o=f(at);async function at(t,r,a){await J(t);const o=X(t,r),i=v(o),e=N({layer:t,layerJSON:await h(t,i,a)});return await tt(t,o),await rt(o,e,a),t.portalItem=o,w(i),o}export{So as save,Io as saveAll,$o as saveAs};
