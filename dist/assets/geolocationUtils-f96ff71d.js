import{s as x,a as h,b as v}from"./Error-e5869661.js";import{h as P}from"./string-46813dd9.js";import{w as $,R as b}from"./Extent-b8913cd1.js";import{j as O}from"./Portal-d13c5d2a.js";import"./request-c6faf466.js";import{r as g}from"./typedArrayUtil-6bfe4dae.js";import"./geometry-1b3a0099.js";import{m as R}from"./Polyline-7684a66d.js";import{s as c}from"./jsonMap-92eea954.js";import{e as o,y as i,n as d,l as y}from"./cast-34ff1fab.js";import{b as f}from"./ensureType-abaf235a.js";import{v as p}from"./jsonUtils-eb956695.js";import{a as U,n as D}from"./project-8b344e00.js";new c({MGRS:"mgrs",USNG:"usng",UTM:"utm",GeoRef:"geo-ref",GARS:"gars",DMS:"dms",DDM:"ddm",DD:"dd"});new c({109006:"centimeters",9102:"decimal-degrees",109005:"decimeters",9002:"feet",109009:"inches",9036:"kilometers",9001:"meters",9035:"miles",109007:"millimeters",109012:"nautical-miles",9096:"yards"});let m=class extends y{constructor(t){super(t),this.deviationUnit=null,this.geometries=null,this.maxDeviation=null}};o([i({type:String,json:{write:!0}})],m.prototype,"deviationUnit",void 0),o([i({json:{read:{reader:e=>e?e.map(t=>p(t)).filter(g):null},write:{writer:(e,t)=>{t.geometries=(e==null?void 0:e.map(r=>r.toJSON()))??null}}}})],m.prototype,"geometries",void 0),o([i({type:Number,json:{write:!0}})],m.prototype,"maxDeviation",void 0),m=o([d("esri.rest.support.GeneralizeParameters")],m),m.from=f(m);new c({preserveShape:"preserve-shape"});let l=class extends y{constructor(t){super(t),this.calculationType=null,this.geodesic=null,this.lengthUnit=null,this.polylines=null}};o([i({type:String,json:{write:!0}})],l.prototype,"calculationType",void 0),o([i({type:Boolean,json:{write:!0}})],l.prototype,"geodesic",void 0),o([i({json:{write:!0}})],l.prototype,"lengthUnit",void 0),o([i({type:[R],json:{read:{reader:e=>e?e.map(t=>p(t)):null},write:{writer:(e,t)=>{t.polylines=e.map(r=>r.toJSON())}}}})],l.prototype,"polylines",void 0),l=o([d("esri.rest.support.LengthsParameters")],l),l.from=f(l);new c({esriGeometryOffsetBevelled:"bevelled",esriGeometryOffsetMitered:"mitered",esriGeometryOffsetRounded:"rounded"});new c({9001:"meters",9002:"feet",9036:"kilometers",9093:"miles",109012:"nautical-miles",109001:"yards"});let n=class extends y{constructor(t){super(t),this.bevelRatio=null,this.geometries=null,this.offsetDistance=null,this.offsetHow=null,this.offsetUnit=null}};o([i({type:Number,json:{write:!0}})],n.prototype,"bevelRatio",void 0),o([i({json:{read:{reader:e=>e?e.map(t=>p(t)).filter(g):null},write:{writer:(e,t)=>{t.geometries=(e==null?void 0:e.map(r=>r.toJSON()))??null}}}})],n.prototype,"geometries",void 0),o([i({type:Number,json:{write:!0}})],n.prototype,"offsetDistance",void 0),o([i({type:String,json:{write:!0}})],n.prototype,"offsetHow",void 0),o([i({type:String,json:{write:!0}})],n.prototype,"offsetUnit",void 0),n=o([d("esri.rest.support.OffsetParameters")],n),n.from=f(n);new c({esriGeometryRelationCross:"cross",esriGeometryRelationDisjoint:"disjoint",esriGeometryRelationIn:"in",esriGeometryRelationInteriorIntersection:"interior-intersection",esriGeometryRelationIntersection:"intersection",esriGeometryRelationLineCoincidence:"line-coincidence",esriGeometryRelationLineTouch:"line-touch",esriGeometryRelationOverlap:"overlap",esriGeometryRelationPointTouch:"point-touch",esriGeometryRelationTouch:"touch",esriGeometryRelationWithin:"within",esriGeometryRelationRelation:"relation"});let a=class extends y{constructor(t){super(t),this.geometries1=null,this.geometries2=null,this.relation=null,this.relationParameter=null}};o([i({json:{read:{reader:e=>e?e.map(t=>p(t)).filter(g):null},write:{writer:(e,t)=>{t.geometries1=(e==null?void 0:e.map(r=>r.toJSON()))??null}}}})],a.prototype,"geometries1",void 0),o([i({json:{read:{reader:e=>e?e.map(t=>p(t)).filter(g):null},write:{writer:(e,t)=>{t.geometries2=(e==null?void 0:e.map(r=>r.toJSON()))??null}}}})],a.prototype,"geometries2",void 0),o([i({type:String,json:{write:!0}})],a.prototype,"relation",void 0),o([i({type:String,json:{write:!0}})],a.prototype,"relationParameter",void 0),a=o([d("esri.rest.support.RelationParameters")],a),a.from=f(a);new c({0:"default-curve-extension",1:"relocate-ends",2:"keep-end-attributes",4:"no-end-attributes",8:"no-extend-at-from",16:"no-extend-at-to"});let u=class extends y{constructor(e){super(e),this.extendHow="default-curve-extension",this.polylines=null,this.trimExtendTo=null}};o([i({type:String,json:{write:!0}})],u.prototype,"extendHow",void 0),o([i({type:[R],json:{read:{reader:e=>e?e.map(t=>p(t)):null},write:{writer:(e,t)=>{t.polylines=e.map(r=>r.toJSON())}}}})],u.prototype,"polylines",void 0),o([i({json:{read:{reader:e=>e?p(e):null},write:{writer:(e,t)=>{t.trimExtendTo=e.toJSON()}}}})],u.prototype,"trimExtendTo",void 0),u=o([d("esri.rest.support.TrimExtendParameters")],u),u.from=f(u);const S=x.getLogger("esri.widgets.support.geolocationUtils"),N={maximumAge:0,timeout:15e3,enableHighAccuracy:!0};function T(){const e=P("esri-geolocation");return e||S.warn("geolocation-unsupported","Geolocation unsupported."),e}function J(){const e=window.isSecureContext;return e||S.warn("insecure-context","Geolocation requires a secure origin."),e}function te(){return T()&&J()}function oe(e){return e||(e=N),new Promise((r,s)=>{setTimeout(()=>s(new h("geolocation:timeout","getting the current geolocation position timed out")),15e3),navigator.geolocation.getCurrentPosition(r,s,e)})}function re(e,t){const{position:r,view:s}=e;return H(A(M(r)),s,t)}function M(e){const t=e&&e.coords||{},r={accuracy:t.accuracy,altitude:t.altitude,altitudeAccuracy:t.altitudeAccuracy,heading:t.heading,latitude:t.latitude,longitude:t.longitude,speed:t.speed};return e&&{coords:r,timestamp:e.timestamp}}function A(e){const t=e&&e.coords;return t?new $({longitude:t.longitude,latitude:t.latitude,z:t.altitude||null,spatialReference:{wkid:4326}}):null}function H(e,t,r){if(!t)return Promise.resolve(e);const s=t.spatialReference;return s.isWGS84?Promise.resolve(e):s.isWebMercator?Promise.resolve(b(e)):L(r).then(w=>{if(!w)throw new h("geometry-service:missing-url","Geometry service URL is missing");const j=new U({geometries:[e],outSpatialReference:s});return D(w,j,r).then(G=>G[0])})}function L(e){if(v.geometryServiceUrl)return Promise.resolve(v.geometryServiceUrl);const t=O.getDefault();return t.load(e).catch(()=>{}).then(()=>t.get("helperServices.geometry.url"))}export{oe as g,re as j,te as l};
