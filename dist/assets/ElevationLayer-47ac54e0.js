import{_ as y}from"./preload-helper-596b5639.js";import{c as f,e as s,y as a,n as g}from"./cast-34ff1fab.js";import{U as v,g as w}from"./request-0ae6f728.js";import{s as $,a as T}from"./Error-e5869661.js";import{C as b,r as m,p as S,Q as L}from"./typedArrayUtil-6bfe4dae.js";import{O as I}from"./MultiOriginJSONSupport-98bacd7d.js";import{f as c,w as k}from"./promiseUtils-281d25c9.js";import"./ensureType-abaf235a.js";import{o as D}from"./Extent-b8913cd1.js";import{v as E}from"./HeightModelInfo-2307586e.js";import{b as x}from"./Layer-3ff9d31c.js";import{s as O}from"./ArcGISCachedService-9b1d87b5.js";import{p as V}from"./ArcGISService-cea018a9.js";import{c as j,f as P}from"./OperationalLayer-22b6ebd6.js";import{v as A}from"./PortalLayer-ce06c43d.js";import{u as M}from"./workers-bbc843aa.js";import"./string-46813dd9.js";import"./nextTick-3ee5a785.js";import"./jsonMap-92eea954.js";import"./unitUtils-2906b0b4.js";import"./geometry-1b3a0099.js";import"./Polyline-7684a66d.js";import"./typeUtils-0cf27003.js";import"./Evented-fac53f7f.js";import"./Identifiable-016ad07d.js";import"./Loadable-3c0fb2d0.js";import"./Promise-19e65545.js";import"./TilemapCache-c12a9cc0.js";import"./TileInfo-f6a83d08.js";import"./aaBoundingRect-71c1e25d.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./byteSizeEstimations-90c5a50d.js";import"./HandleOwner-9428adb4.js";import"./reactiveUtils-aec98ee9.js";import"./LRUCache-9d77066f.js";import"./MemCache-97cd02d3.js";import"./arcgisLayerUrl-52d50722.js";import"./persistableUrlUtils-94eb42ca.js";import"./TimeExtent-b83e45a0.js";import"./ElevationInfo-d6cce4ca.js";import"./fieldUtils-ba80cc48.js";import"./arcadeOnDemand-8d1e3277.js";import"./lengthUtils-02fceda8.js";import"./opacityUtils-ea6b845d.js";import"./asyncUtils-64877ef6.js";import"./Portal-ed3455de.js";import"./locale-30120714.js";import"./PortalGroup-506cda94.js";import"./PortalUser-d46abb74.js";import"./PortalItem-7875d255.js";import"./assets-4600b25c.js";import"./Connection-ac507ad3.js";import"./Queue-bd70231f.js";import"./intl-4434dd8e.js";import"./number-4b1bfb24.js";import"./messages-fe8e2c1f.js";class U{constructor(e,t,r,l,p={}){this._mainMethod=t,this._transferLists=r,this._listeners=[],this._promise=M(e,{...p,schedule:l}).then(h=>{if(this._thread===void 0){this._thread=h,this._promise=null,p.hasInitialize&&this.broadcast({},"initialize");for(const n of this._listeners)this._connectListener(n)}else h.close()}),this._promise.catch(h=>$.getLogger("esri.core.workers.WorkerHandle").error(`Failed to initialize ${e} worker: ${h}`))}on(e,t){const r={removed:!1,eventName:e,callback:t,threadHandle:null};return this._listeners.push(r),this._connectListener(r),f(()=>{r.removed=!0,b(this._listeners,r),this._thread&&m(r.threadHandle)&&r.threadHandle.remove()})}destroy(){this._thread&&(this._thread.close(),this._thread=null),this._promise=null}invoke(e,t){return this.invokeMethod(this._mainMethod,e,t)}invokeMethod(e,t,r){if(this._thread){const l=this._transferLists[e],p=l?l(t):[];return this._thread.invoke(e,t,{transferList:p,signal:r})}return this._promise?this._promise.then(()=>(c(r),this.invokeMethod(e,t,r))):Promise.reject(null)}broadcast(e,t){return this._thread?Promise.all(this._thread.broadcast(t,e)).then(()=>{}):this._promise?this._promise.then(()=>this.broadcast(e,t)):Promise.reject()}get promise(){return this._promise}_connectListener(e){this._thread&&this._thread.on(e.eventName,e.callback).then(t=>{e.removed||(e.threadHandle=t)})}}class _ extends U{constructor(e=null){super("LercWorker","_decode",{_decode:t=>[t.buffer]},e,{strategy:"dedicated"}),this.schedule=e,this.ref=0}decode(e,t,r){return e&&e.byteLength!==0?this.invoke({buffer:e,options:t},r):Promise.resolve(null)}release(){--this.ref<=0&&(d.forEach((e,t)=>{e===this&&d.delete(t)}),this.destroy())}}const d=new Map;function C(i=null){let e=d.get(S(i));return e||(m(i)?(e=new _(t=>i.schedule(t)),d.set(i,e)):(e=new _,d.set(null,e))),++e.ref,e}let o=class extends O(V(j(A(I(x))))){constructor(...i){super(...i),this.copyright=null,this.heightModelInfo=null,this.path=null,this.minScale=void 0,this.maxScale=void 0,this.opacity=1,this.operationalLayerType="ArcGISTiledElevationServiceLayer",this.sourceJSON=null,this.type="elevation",this.url=null,this.version=null,this._lercDecoder=C()}normalizeCtorArgs(i,e){return typeof i=="string"?{url:i,...e}:i}destroy(){this._lercDecoder=L(this._lercDecoder)}readVersion(i,e){let t=e.currentVersion;return t||(t=9.3),t}load(i){const e=m(i)?i.signal:null;return this.addResolvingPromise(this.loadFromPortal({supportedTypes:["Image Service"],supportsData:!1,validateItem:t=>{for(let r=0;r<t.typeKeywords.length;r++)if(t.typeKeywords[r].toLowerCase()==="elevation 3d layer")return!0;throw new T("portal:invalid-layer-item-type","Invalid layer item type '${type}', expected '${expectedType}' ",{type:"Image Service",expectedType:"Image Service Elevation 3D Layer"})}},i).catch(k).then(()=>this._fetchImageService(e))),Promise.resolve(this)}fetchTile(i,e,t,r){const l=m((r=r||{signal:null}).signal)?r.signal:r.signal=new AbortController().signal,p={responseType:"array-buffer",signal:l},h={noDataValue:r.noDataValue,returnFileInfo:!0};return this.load().then(()=>this._fetchTileAvailability(i,e,t,r)).then(()=>v(this.getTileUrl(i,e,t),p)).then(n=>this._lercDecoder.decode(n.data,h,l)).then(n=>{var u;return{values:n.pixelData,width:n.width,height:n.height,maxZError:(u=n.fileInfo)==null?void 0:u.maxZError,noDataValue:n.noDataValue,minValue:n.minValue,maxValue:n.maxValue}})}getTileUrl(i,e,t){const r=!this.tilemapCache&&this.supportsBlankTile,l=w({...this.parsedUrl.query,blankTile:!r&&null});return`${this.parsedUrl.path}/tile/${i}/${e}/${t}${l?"?"+l:""}`}async queryElevation(i,e){const{ElevationQuery:t}=await y(()=>import("./ElevationQuery-d8cafe05.js"),["assets/ElevationQuery-d8cafe05.js","assets/asyncUtils-64877ef6.js","assets/cast-34ff1fab.js","assets/typedArrayUtil-6bfe4dae.js","assets/string-46813dd9.js","assets/Error-e5869661.js","assets/ensureType-abaf235a.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-281d25c9.js","assets/unitUtils-2906b0b4.js","assets/jsonMap-92eea954.js","assets/Extent-b8913cd1.js","assets/Polyline-7684a66d.js","assets/projection-b78b11c8.js","assets/preload-helper-596b5639.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/SimpleObservable-f97014ec.js","assets/mat4-62d5e6a4.js","assets/assets-4600b25c.js","assets/request-0ae6f728.js","assets/zscale-750d6efd.js","assets/aaBoundingRect-71c1e25d.js","assets/geometry-1b3a0099.js","assets/typeUtils-0cf27003.js","assets/TileInfo-f6a83d08.js"]);return c(e),new t().query(this,i,e)}async createElevationSampler(i,e){const{ElevationQuery:t}=await y(()=>import("./ElevationQuery-d8cafe05.js"),["assets/ElevationQuery-d8cafe05.js","assets/asyncUtils-64877ef6.js","assets/cast-34ff1fab.js","assets/typedArrayUtil-6bfe4dae.js","assets/string-46813dd9.js","assets/Error-e5869661.js","assets/ensureType-abaf235a.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-281d25c9.js","assets/unitUtils-2906b0b4.js","assets/jsonMap-92eea954.js","assets/Extent-b8913cd1.js","assets/Polyline-7684a66d.js","assets/projection-b78b11c8.js","assets/preload-helper-596b5639.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/SimpleObservable-f97014ec.js","assets/mat4-62d5e6a4.js","assets/assets-4600b25c.js","assets/request-0ae6f728.js","assets/zscale-750d6efd.js","assets/aaBoundingRect-71c1e25d.js","assets/geometry-1b3a0099.js","assets/typeUtils-0cf27003.js","assets/TileInfo-f6a83d08.js"]);return c(e),new t().createSampler(this,i,e)}_fetchTileAvailability(i,e,t,r){return this.tilemapCache?this.tilemapCache.fetchAvailability(i,e,t,r):Promise.resolve("unknown")}async _fetchImageService(i){var r;if(this.sourceJSON)return this.sourceJSON;const e={query:{f:"json",...this.parsedUrl.query},responseType:"json",signal:i},t=await v(this.parsedUrl.path,e);t.ssl&&(this.url=(r=this.url)==null?void 0:r.replace(/^http:/i,"https:")),this.sourceJSON=t.data,this.read(t.data,{origin:"service",url:this.parsedUrl})}get hasOverriddenFetchTile(){return!this.fetchTile.__isDefault__}};s([a({json:{read:{source:"copyrightText"}}})],o.prototype,"copyright",void 0),s([a({readOnly:!0,type:E})],o.prototype,"heightModelInfo",void 0),s([a({type:String,json:{origins:{"web-scene":{read:!0,write:!0}},read:!1}})],o.prototype,"path",void 0),s([a({type:["show","hide"]})],o.prototype,"listMode",void 0),s([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"minScale",void 0),s([a({json:{read:!1,write:!1,origins:{service:{read:!1,write:!1},"portal-item":{read:!1,write:!1},"web-document":{read:!1,write:!1}}},readOnly:!0})],o.prototype,"maxScale",void 0),s([a({json:{read:!1,write:!1,origins:{"web-document":{read:!1,write:!1}}}})],o.prototype,"opacity",void 0),s([a({type:["ArcGISTiledElevationServiceLayer"]})],o.prototype,"operationalLayerType",void 0),s([a()],o.prototype,"sourceJSON",void 0),s([a({json:{read:!1},value:"elevation",readOnly:!0})],o.prototype,"type",void 0),s([a(P)],o.prototype,"url",void 0),s([a()],o.prototype,"version",void 0),s([D("version",["currentVersion"])],o.prototype,"readVersion",null),o=s([g("esri.layers.ElevationLayer")],o),o.prototype.fetchTile.__isDefault__=!0;const Je=o;export{Je as default};
