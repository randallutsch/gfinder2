import{_ as w}from"./preload-helper-596b5639.js";import{e as r,y as i,n as b}from"./cast-34ff1fab.js";import"./geometry-1b3a0099.js";import{k as j}from"./PopupTemplate-8759f34d.js";import"./UniqueValueRenderer-07be7be0.js";import{b as J,n as N}from"./jsonUtils-30a58fb0.js";import{r as O,t as R}from"./typedArrayUtil-6bfe4dae.js";import{O as P}from"./MultiOriginJSONSupport-98bacd7d.js";import{x as q,w as k}from"./promiseUtils-281d25c9.js";import{j as y}from"./request-c6faf466.js";import"./ensureType-abaf235a.js";import{i as I}from"./typeUtils-0cf27003.js";import{b as T}from"./Layer-685ea357.js";import{s as D,a as f}from"./Error-e5869661.js";import{h as G}from"./string-46813dd9.js";import{m as L}from"./Loadable-3c0fb2d0.js";import{u as Q}from"./workers-6a283d68.js";import{l as Z}from"./clientSideDefaults-dae7a427.js";import z from"./FeatureSet-b61b4ed5.js";import{a as x,k as F}from"./Extent-b8913cd1.js";import{v as C}from"./Polyline-7684a66d.js";import{n as V}from"./BlendLayer-1dfdcb30.js";import{o as A}from"./CustomParametersMixin-190de352.js";import{n as U,p as W}from"./FeatureReductionLayer-9b4d60f8.js";import{c as B,d as M,j as H,m as K,a as X,w as Y,p as tt,l as et,f as rt}from"./OperationalLayer-421969eb.js";import{c as ot}from"./OrderedLayer-1b69d825.js";import{v as it}from"./PortalLayer-10051047.js";import{p as st}from"./RefreshableLayer-d1776f5f.js";import{t as nt}from"./ScaleRangeLayer-d814fce3.js";import{a as at}from"./TemporalLayer-b5c0f8d2.js";import{p as pt}from"./FeatureTemplate-f1076210.js";import{n as lt}from"./FeatureType-b0584768.js";import{y as ut}from"./Field-db318fdd.js";import{s as dt}from"./fieldProperties-2bcd082f.js";import{F as g,b as mt}from"./fieldUtils-c253753a.js";import{j as ht,i as ct}from"./labelingInfo-2aefe891.js";import{x as h}from"./Query-394dcfc7.js";import{p as yt}from"./popupUtils-6413f999.js";import"./nextTick-3ee5a785.js";import"./Clonable-a26a28b0.js";import"./Collection-3317d203.js";import"./Evented-fac53f7f.js";import"./SimpleObservable-f97014ec.js";import"./jsonMap-92eea954.js";import"./enumeration-e40d8895.js";import"./number-4b1bfb24.js";import"./locale-30120714.js";import"./Identifiable-016ad07d.js";import"./symbols-0eeb49ca.js";import"./CIMSymbol-6c8aee70.js";import"./Symbol-8a110cc7.js";import"./Color-0f9fdd46.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-ea6b845d.js";import"./SimpleFillSymbol-80498a78.js";import"./aaBoundingBox-77ee83e3.js";import"./persistableUrlUtils-3427b748.js";import"./collectionUtils-23cca63a.js";import"./Portal-d13c5d2a.js";import"./PortalGroup-506cda94.js";import"./PortalUser-12cb329a.js";import"./LegendOptions-8b163282.js";import"./arcadeOnDemand-c5034a8b.js";import"./reactiveUtils-aec98ee9.js";import"./diffUtils-67450e3a.js";import"./colorRamps-d6116b89.js";import"./sizeVariableUtils-d4870b0d.js";import"./Graphic-ba3a92c9.js";import"./jsonUtils-eb956695.js";import"./Promise-19e65545.js";import"./compilerUtils-05c96a64.js";import"./lengthUtils-02fceda8.js";import"./unitUtils-2906b0b4.js";import"./jsonUtils-b9ebb089.js";import"./styleUtils-ea2c30a4.js";import"./DictionaryLoader-076d7343.js";import"./LRUCache-9d77066f.js";import"./MemCache-97cd02d3.js";import"./deprecate-c2edfb4d.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./Connection-3d967827.js";import"./Queue-bd70231f.js";import"./assets-544006ef.js";import"./intl-1561e875.js";import"./messages-fe8e2c1f.js";import"./QueryEngineCapabilities-42e44ded.js";import"./defaultsJSON-b087dd4d.js";import"./fieldType-11b4c3ca.js";import"./parser-6760a715.js";import"./mat4-62d5e6a4.js";import"./TimeExtent-b83e45a0.js";import"./ElevationInfo-7059590d.js";import"./asyncUtils-64877ef6.js";import"./PortalItem-a267e3e1.js";import"./TimeInfo-5a12a645.js";import"./FieldsIndex-bec5c377.js";import"./labelUtils-cfa36e70.js";import"./FullTextSearch-7a786b52.js";const E="esri.layers.graphics.sources.GeoJSONSource",v=D.getLogger(E);let d=class extends L{constructor(){super(...arguments),this.type="geojson",this.refresh=q(async t=>{await this.load();const{extent:e,timeExtent:o}=await this._connection.invoke("refresh",t);return this.sourceJSON.extent=e,o&&(this.sourceJSON.timeInfo.timeExtent=[o.start,o.end]),{dataChanged:!0,updates:{extent:this.sourceJSON.extent,timeInfo:this.sourceJSON.timeInfo}}})}load(t){const e=O(t)?t.signal:null;return this.addResolvingPromise(this._startWorker(e)),Promise.resolve(this)}destroy(){var t;(t=this._connection)==null||t.close(),this._connection=null}applyEdits(t){return this.load().then(()=>this._applyEdits(t))}openPorts(){return this.load().then(()=>this._connection.openPorts())}queryFeatures(t,e={}){return this.load(e).then(()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e)).then(o=>z.fromJSON(o))}queryFeaturesJSON(t,e={}){return this.load(e).then(()=>this._connection.invoke("queryFeatures",t?t.toJSON():null,e))}queryFeatureCount(t,e={}){return this.load(e).then(()=>this._connection.invoke("queryFeatureCount",t?t.toJSON():null,e))}queryObjectIds(t,e={}){return this.load(e).then(()=>this._connection.invoke("queryObjectIds",t?t.toJSON():null,e))}queryExtent(t,e={}){return this.load(e).then(()=>this._connection.invoke("queryExtent",t?t.toJSON():null,e)).then(o=>({count:o.count,extent:x.fromJSON(o.extent)}))}querySnapping(t,e={}){return this.load(e).then(()=>this._connection.invoke("querySnapping",t,e))}_applyEdits(t){if(!this._connection)throw new f("geojson-layer-source:edit-failure","Memory source not loaded");const e=this.layer.objectIdField,o=[],n=[],u=[];if(t.addFeatures)for(const a of t.addFeatures)o.push(this._serializeFeature(a));if(t.deleteFeatures)for(const a of t.deleteFeatures)"objectId"in a&&a.objectId!=null?n.push(a.objectId):"attributes"in a&&a.attributes[e]!=null&&n.push(a.attributes[e]);if(t.updateFeatures)for(const a of t.updateFeatures)u.push(this._serializeFeature(a));return this._connection.invoke("applyEdits",{adds:o,updates:u,deletes:n}).then(({extent:a,timeExtent:p,featureEditResults:l})=>(this.sourceJSON.extent=a,p&&(this.sourceJSON.timeInfo.timeExtent=[p.start,p.end]),this._createEditsResult(l)))}_createEditsResult(t){return{addFeatureResults:t.addResults?t.addResults.map(this._createFeatureEditResult,this):[],updateFeatureResults:t.updateResults?t.updateResults.map(this._createFeatureEditResult,this):[],deleteFeatureResults:t.deleteResults?t.deleteResults.map(this._createFeatureEditResult,this):[],addAttachmentResults:[],updateAttachmentResults:[],deleteAttachmentResults:[]}}_createFeatureEditResult(t){const e=t.success===!0?null:t.error||{code:void 0,description:void 0};return{objectId:t.objectId,globalId:t.globalId,error:e?new f("geojson-layer-source:edit-failure",e.description,{code:e.code}):null}}_serializeFeature(t){const{attributes:e}=t,o=this._geometryForSerialization(t);return o?{geometry:o.toJSON(),attributes:e}:{attributes:e}}_geometryForSerialization(t){const{geometry:e}=t;return R(e)?null:e.type==="mesh"||e.type==="extent"?C.fromExtent(e.extent):e}async _startWorker(t){this._connection=await Q("GeoJSONSourceWorker",{strategy:G("feature-layers-workers")?"dedicated":"local",signal:t});const{fields:e,spatialReference:o,hasZ:n,geometryType:u,objectIdField:a,url:p,timeInfo:l,customParameters:S}=this.layer,_=this.layer.originOf("spatialReference")==="defaults",$={url:p,customParameters:S,fields:e&&e.map(c=>c.toJSON()),geometryType:I.toJSON(u),hasZ:n,objectIdField:a,timeInfo:l?l.toJSON():null,spatialReference:_?null:o&&o.toJSON()},m=await this._connection.invoke("load",$,{signal:t});for(const c of m.warnings)v.warn(c.message,{layer:this.layer,warning:c});m.featureErrors.length&&v.warn(`Encountered ${m.featureErrors.length} validation errors while loading features`,m.featureErrors),this.sourceJSON=m.layerDefinition,this.capabilities=Z(this.sourceJSON.hasZ,!0)}};r([i()],d.prototype,"capabilities",void 0),r([i()],d.prototype,"type",void 0),r([i({constructOnly:!0})],d.prototype,"layer",void 0),r([i()],d.prototype,"sourceJSON",void 0),d=r([b(E)],d);const ft=dt();let s=class extends ot(A(U(W(V(at(nt(st(B(it(P(T))))))))))){constructor(t){super(t),this.copyright=null,this.definitionExpression=null,this.displayField=null,this.editingEnabled=!1,this.elevationInfo=null,this.fields=null,this.fieldsIndex=null,this.fullExtent=null,this.geometryType=null,this.hasZ=void 0,this.labelsVisible=!0,this.labelingInfo=null,this.legendEnabled=!0,this.objectIdField=null,this.operationalLayerType="GeoJSON",this.popupEnabled=!0,this.popupTemplate=null,this.screenSizePerspectiveEnabled=!0,this.source=new d({layer:this}),this.spatialReference=F.WGS84,this.templates=null,this.title="GeoJSON",this.type="geojson",this.typeIdField=null,this.types=null}destroy(){var t;(t=this.source)==null||t.destroy()}load(t){const e=this.loadFromPortal({supportedTypes:["GeoJson"],supportsData:!1},t).catch(k).then(()=>this.source.load(t)).then(()=>{this.read(this.source.sourceJSON,{origin:"service",url:this.parsedUrl}),this.revert(["objectIdField","fields","timeInfo"],"service"),g(this.renderer,this.fieldsIndex),mt(this.timeInfo,this.fieldsIndex)});return this.addResolvingPromise(e),Promise.resolve(this)}get capabilities(){return this.source?this.source.capabilities:null}get createQueryVersion(){return this.commitProperty("definitionExpression"),this.commitProperty("timeExtent"),this.commitProperty("timeOffset"),this.commitProperty("geometryType"),this.commitProperty("capabilities"),(this._get("createQueryVersion")||0)+1}get defaultPopupTemplate(){return this.createPopupTemplate()}get isTable(){return this.loaded&&this.geometryType==null}get parsedUrl(){return this.url?y(this.url):null}set renderer(t){g(t,this.fieldsIndex),this._set("renderer",t)}set url(t){if(!t)return void this._set("url",t);const e=y(t);this._set("url",e.path),e.query&&(this.customParameters={...this.customParameters,...e.query})}async applyEdits(t,e){const o=await w(()=>import("./editingSupport-00f45ec0.js"),["assets/editingSupport-00f45ec0.js","assets/Graphic-ba3a92c9.js","assets/cast-34ff1fab.js","assets/typedArrayUtil-6bfe4dae.js","assets/string-46813dd9.js","assets/Error-e5869661.js","assets/ensureType-abaf235a.js","assets/nextTick-3ee5a785.js","assets/promiseUtils-281d25c9.js","assets/geometry-1b3a0099.js","assets/Extent-b8913cd1.js","assets/Polyline-7684a66d.js","assets/typeUtils-0cf27003.js","assets/jsonMap-92eea954.js","assets/PopupTemplate-8759f34d.js","assets/Clonable-a26a28b0.js","assets/Collection-3317d203.js","assets/Evented-fac53f7f.js","assets/SimpleObservable-f97014ec.js","assets/fieldUtils-c253753a.js","assets/preload-helper-596b5639.js","assets/arcadeOnDemand-c5034a8b.js","assets/enumeration-e40d8895.js","assets/number-4b1bfb24.js","assets/locale-30120714.js","assets/Identifiable-016ad07d.js","assets/symbols-0eeb49ca.js","assets/CIMSymbol-6c8aee70.js","assets/Symbol-8a110cc7.js","assets/Color-0f9fdd46.js","assets/colorUtils-639f4d25.js","assets/mathUtils-daf59e84.js","assets/common-701a4199.js","assets/screenUtils-7afeb41c.js","assets/opacityUtils-ea6b845d.js","assets/SimpleFillSymbol-80498a78.js","assets/aaBoundingBox-77ee83e3.js","assets/request-c6faf466.js","assets/persistableUrlUtils-3427b748.js","assets/collectionUtils-23cca63a.js","assets/Portal-d13c5d2a.js","assets/Loadable-3c0fb2d0.js","assets/Promise-19e65545.js","assets/PortalGroup-506cda94.js","assets/PortalUser-12cb329a.js","assets/jsonUtils-eb956695.js","assets/uuid-73213768.js","assets/normalizeUtils-f2358696.js","assets/utils-a49efee8.js","assets/EditBusLayer-e5ae410e.js"]);await this.load();const n=await o.applyEdits(this,this.source,t,e);return this.read({extent:this.source.sourceJSON.extent,timeInfo:this.source.sourceJSON.timeInfo},{origin:"service",ignoreDefaults:!0}),n}on(t,e){return super.on(t,e)}createPopupTemplate(t){return yt(this,t)}createQuery(){const t=new h,e=this.get("capabilities.data");t.returnGeometry=!0,e&&e.supportsZ&&(t.returnZ=!0),t.outFields=["*"],t.where=this.definitionExpression||"1=1";const{timeOffset:o,timeExtent:n}=this;return t.timeExtent=o!=null&&n!=null?n.offset(-o.value,o.unit):n||null,t}getFieldDomain(t,e){let o,n=!1;const u=e&&e.feature,a=u&&u.attributes,p=this.typeIdField&&a&&a[this.typeIdField];return p!=null&&this.types&&(n=this.types.some(l=>l.id==p&&(o=l.domains&&l.domains[t],o&&o.type==="inherited"&&(o=this._getLayerDomain(t)),!0))),n||o||(o=this._getLayerDomain(t)),o}getField(t){return this.fieldsIndex.get(t)}queryFeatures(t,e){return this.load().then(()=>this.source.queryFeatures(h.from(t)||this.createQuery(),e)).then(o=>{if(o!=null&&o.features)for(const n of o.features)n.layer=n.sourceLayer=this;return o})}queryObjectIds(t,e){return this.load().then(()=>this.source.queryObjectIds(h.from(t)||this.createQuery(),e))}queryFeatureCount(t,e){return this.load().then(()=>this.source.queryFeatureCount(h.from(t)||this.createQuery(),e))}queryExtent(t,e){return this.load().then(()=>this.source.queryExtent(h.from(t)||this.createQuery(),e))}async hasDataChanged(){try{const{dataChanged:t,updates:e}=await this.source.refresh(this.customParameters);return O(e)&&this.read(e,{origin:"service",url:this.parsedUrl,ignoreDefaults:!0}),t}catch{}return!1}_getLayerDomain(t){if(!this.fields)return null;let e=null;return this.fields.some(o=>(o.name===t&&(e=o.domain),!!e)),e}};r([i({readOnly:!0,json:{read:!1,write:!1}})],s.prototype,"capabilities",null),r([i({type:String})],s.prototype,"copyright",void 0),r([i({readOnly:!0})],s.prototype,"createQueryVersion",null),r([i({readOnly:!0})],s.prototype,"defaultPopupTemplate",null),r([i({type:String,json:{name:"layerDefinition.definitionExpression",write:{enabled:!0,allowNull:!0}}})],s.prototype,"definitionExpression",void 0),r([i({type:String})],s.prototype,"displayField",void 0),r([i({type:Boolean})],s.prototype,"editingEnabled",void 0),r([i(M)],s.prototype,"elevationInfo",void 0),r([i({type:[ut],json:{name:"layerDefinition.fields",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"fields"}}}})],s.prototype,"fields",void 0),r([i(ft.fieldsIndex)],s.prototype,"fieldsIndex",void 0),r([i({type:x,json:{name:"extent"}})],s.prototype,"fullExtent",void 0),r([i({type:["point","polygon","polyline","multipoint"],json:{read:{reader:I.read}}})],s.prototype,"geometryType",void 0),r([i({type:Boolean})],s.prototype,"hasZ",void 0),r([i(H)],s.prototype,"id",void 0),r([i({type:Boolean,readOnly:!0})],s.prototype,"isTable",null),r([i(K)],s.prototype,"labelsVisible",void 0),r([i({type:[ht],json:{name:"layerDefinition.drawingInfo.labelingInfo",read:{reader:ct},write:!0}})],s.prototype,"labelingInfo",void 0),r([i(X)],s.prototype,"legendEnabled",void 0),r([i({type:["show","hide"]})],s.prototype,"listMode",void 0),r([i({type:String,json:{name:"layerDefinition.objectIdField",write:{ignoreOrigin:!0,isRequired:!0},origins:{service:{name:"objectIdField"}}}})],s.prototype,"objectIdField",void 0),r([i(Y)],s.prototype,"opacity",void 0),r([i({type:["GeoJSON"]})],s.prototype,"operationalLayerType",void 0),r([i({readOnly:!0})],s.prototype,"parsedUrl",null),r([i(tt)],s.prototype,"popupEnabled",void 0),r([i({type:j,json:{name:"popupInfo",write:!0}})],s.prototype,"popupTemplate",void 0),r([i({types:J,json:{name:"layerDefinition.drawingInfo.renderer",write:!0,origins:{service:{name:"drawingInfo.renderer"},"web-scene":{types:N}}}})],s.prototype,"renderer",null),r([i(et)],s.prototype,"screenSizePerspectiveEnabled",void 0),r([i({readOnly:!0})],s.prototype,"source",void 0),r([i({type:F})],s.prototype,"spatialReference",void 0),r([i({type:[pt]})],s.prototype,"templates",void 0),r([i()],s.prototype,"title",void 0),r([i({json:{read:!1},readOnly:!0})],s.prototype,"type",void 0),r([i({type:String,readOnly:!0})],s.prototype,"typeIdField",void 0),r([i({type:[lt]})],s.prototype,"types",void 0),r([i(rt)],s.prototype,"url",null),s=r([b("esri.layers.GeoJSONLayer")],s);const dr=s;export{dr as default};
