import{e as m,y as g,n as d}from"./cast-7ef3a066.js";import{j as n}from"./Collection-8f94e599.js";import{l as u}from"./CollectionFlattener-8cf1891d.js";import{r as p,t as _}from"./typedArrayUtil-4015bf74.js";import{h as w,l as c}from"./reactiveUtils-b911287d.js";import"./ArrayPool-45db95ab.js";import{b as y,h as f,O as k,g as v,f as M,a as I,D as V}from"./Stop-e45f665f.js";import{y as G,u as F}from"./LayerView-3ffe8f9a.js";import{i as H}from"./GraphicContainer-17b5ffa9.js";import{o as C}from"./BaseGraphicContainer-9a57caae.js";import"./string-7d6c8f5c.js";import"./Error-1dfe2922.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e323addc.js";import"./Evented-7dfb249a.js";import"./SimpleObservable-ddf0ceba.js";import"./Graphic-17f3b359.js";import"./geometry-22feb2bb.js";import"./Extent-54ef1174.js";import"./Polyline-d942e774.js";import"./typeUtils-17403a33.js";import"./jsonMap-c8081704.js";import"./PopupTemplate-9da636f6.js";import"./Clonable-c315fc8d.js";import"./fieldUtils-75feb382.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-797f4f1c.js";import"./enumeration-cda3949b.js";import"./number-1bdcdfd9.js";import"./locale-30120714.js";import"./Identifiable-d701141a.js";import"./symbols-87ca67f4.js";import"./CIMSymbol-52d72a23.js";import"./Symbol-6522d2f3.js";import"./Color-7a3d8c62.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-2c2d0d87.js";import"./aaBoundingBox-10130714.js";import"./request-4f5c54dd.js";import"./persistableUrlUtils-afa98d6c.js";import"./collectionUtils-07fb1a58.js";import"./Portal-0c20e3a4.js";import"./Loadable-772aaf20.js";import"./Promise-e08b9d4d.js";import"./PortalGroup-100f1bed.js";import"./PortalUser-7acb0e3c.js";import"./jsonUtils-196b5f3d.js";import"./utils-b31292b4.js";import"./mat3f32-d3d088e8.js";import"./parser-60fed632.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-13d5dd3c.js";import"./Utils-69437480.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-2d4e629f.js";import"./context-util-87dfae31.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./HandleOwner-2d282b7c.js";import"./ExpandedCIM-e40bb4ca.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-e7f76732.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./vec2f32-461e65a9.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-14228c88.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-106b4c98.js";import"./normalizeUtils-9ff08cf4.js";import"./projectionSupport-22303543.js";import"./projection-ef32d842.js";import"./unitUtils-58dc72ed.js";import"./assets-6d4d2dad.js";import"./zscale-65468675.js";import"./json-48e3ea08.js";import"./labelingInfo-f5cd653d.js";import"./labelUtils-d3906ba4.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-d1659db1.js";import"./VertexArrayObject-27eaf50f.js";import"./FeatureContainer-9ffbac33.js";import"./mat3-45e3f2eb.js";import"./TileContainer-5404bedc.js";import"./TileKey-03ab4f60.js";import"./WGLContainer-0eb146a3.js";import"./pixelUtils-d21f4266.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-921deefe.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./featureConversionUtils-99b22ab9.js";import"./OptimizedFeature-aa2e72dc.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Queue-26a7c9c9.js";import"./visualVariablesUtils-cd632025.js";import"./visualVariablesUtils-b964ebb8.js";import"./lengthUtils-f3b6e37f.js";import"./capabilities-dddb0ea5.js";import"./Matcher-94f40cdf.js";import"./TileStrategy-b2d2fa5e.js";import"./TileStore-e480c2b6.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-8a7aa408.js";import"./TimeExtent-dfe3f644.js";import"./Field-a857bb5a.js";import"./fieldType-36e8171c.js";import"./tileUtils-d57fc766.js";import"./TileClipper-b8854753.js";import"./Geometry-daada628.js";import"./LRUCache-f9ba273b.js";import"./MemCache-15515535.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-5b0ea69d.js";import"./schemaUtils-85d1403c.js";import"./LayerFloorInfo-152559a6.js";import"./diffUtils-f2c670bd.js";import"./createSymbolSchema-0ec759f8.js";import"./rendererUtils-0c1268cc.js";import"./FeatureReductionLayer-be2d99dd.js";import"./BlendLayer-00b35d0f.js";import"./UniqueValueRenderer-5b8937c2.js";import"./LegendOptions-998df0a8.js";import"./colorRamps-68d0ae1f.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-c5090cf5.js";import"./jsonUtils-b516d686.js";import"./DictionaryLoader-3932e3bb.js";import"./deprecate-9e0289e6.js";import"./OperationalLayer-0fbaa211.js";import"./ElevationInfo-a7cee627.js";import"./util-72a186a3.js";import"./ComputedAttributeStorage-002a0545.js";import"./FeatureSetReader-67ae9e70.js";import"./centroid-e729b670.js";import"./FieldsIndex-7523f868.js";import"./vec3f32-4322908d.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof v||t instanceof M||t instanceof I||t instanceof V}function A(t){return n.isCollection(t)&&t.length&&l(t.getItemAt(0))}function $(t){return Array.isArray(t)&&t.length&&l(t[0])}let h=class extends G(F){constructor(){super(...arguments),this._graphics=new n,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>p(this.layer)&&!this.destroyed?[p(this.layer.routeInfo)?new n([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(e=>this._getNetworkFeatureUid(e)):A(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(p);return r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):b}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(p).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.handles.remove(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return _(r.symbol)?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(p));for(const i of t.added)this.handles.add([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};m([g()],h.prototype,"_graphics",void 0),m([g()],h.prototype,"_routeItems",null),h=m([d("esri.views.2d.layers.RouteLayerView2D")],h);const yr=h;export{yr as default};
