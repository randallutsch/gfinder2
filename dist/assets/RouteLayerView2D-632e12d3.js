import{e as m,y as g,n as d}from"./cast-34ff1fab.js";import{j as n}from"./Collection-3317d203.js";import{l as u}from"./CollectionFlattener-489ac26c.js";import{r as p,t as _}from"./typedArrayUtil-6bfe4dae.js";import{h as w,l as c}from"./reactiveUtils-aec98ee9.js";import"./ensureType-abaf235a.js";import{b as y,h as f,O as k,g as v,f as M,a as I,D as V}from"./Stop-2bfa7e8c.js";import{y as G,u as F}from"./LayerView-3939a1f4.js";import{i as H}from"./GraphicContainer-bf61ee0c.js";import{o as C}from"./BaseGraphicContainer-f6bcd737.js";import"./string-46813dd9.js";import"./Error-e5869661.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-281d25c9.js";import"./Evented-fac53f7f.js";import"./SimpleObservable-f97014ec.js";import"./Graphic-ba3a92c9.js";import"./geometry-1b3a0099.js";import"./Extent-b8913cd1.js";import"./Polyline-7684a66d.js";import"./typeUtils-0cf27003.js";import"./jsonMap-92eea954.js";import"./PopupTemplate-8759f34d.js";import"./Clonable-a26a28b0.js";import"./fieldUtils-c253753a.js";import"./preload-helper-596b5639.js";import"./arcadeOnDemand-c5034a8b.js";import"./enumeration-e40d8895.js";import"./number-4b1bfb24.js";import"./locale-30120714.js";import"./Identifiable-016ad07d.js";import"./symbols-0eeb49ca.js";import"./CIMSymbol-6c8aee70.js";import"./Symbol-8a110cc7.js";import"./Color-0f9fdd46.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-ea6b845d.js";import"./SimpleFillSymbol-80498a78.js";import"./aaBoundingBox-77ee83e3.js";import"./request-c6faf466.js";import"./persistableUrlUtils-3427b748.js";import"./collectionUtils-23cca63a.js";import"./Portal-d13c5d2a.js";import"./Loadable-3c0fb2d0.js";import"./Promise-19e65545.js";import"./PortalGroup-506cda94.js";import"./PortalUser-12cb329a.js";import"./jsonUtils-eb956695.js";import"./utils-8ec30506.js";import"./mat3f32-d3d088e8.js";import"./parser-6760a715.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-7483d64a.js";import"./Utils-a3ec9931.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-a2ec75db.js";import"./context-util-2080d28f.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./HandleOwner-9428adb4.js";import"./ExpandedCIM-95a6492d.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-71c1e25d.js";import"./mat2d-80bd93af.js";import"./vec2-f978aef8.js";import"./vec2f32-461e65a9.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-68567b49.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-17da0933.js";import"./normalizeUtils-f2358696.js";import"./utils-a49efee8.js";import"./projectionSupport-a55065e0.js";import"./projection-0e524eaf.js";import"./unitUtils-2906b0b4.js";import"./assets-544006ef.js";import"./zscale-750d6efd.js";import"./json-48e3ea08.js";import"./labelingInfo-2aefe891.js";import"./labelUtils-cfa36e70.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-b9ebb089.js";import"./VertexArrayObject-945630a0.js";import"./FeatureContainer-448644b8.js";import"./mat3-45e3f2eb.js";import"./TileContainer-aa053718.js";import"./TileKey-c8cdd066.js";import"./WGLContainer-82b81574.js";import"./pixelUtils-3328f7e1.js";import"./vec2f64-e0301652.js";import"./ProgramTemplate-49a2b79c.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./featureConversionUtils-9849a680.js";import"./OptimizedFeature-06185297.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./Queue-bd70231f.js";import"./visualVariablesUtils-63ed6b67.js";import"./visualVariablesUtils-be33a1d6.js";import"./lengthUtils-02fceda8.js";import"./capabilities-41f4ea67.js";import"./Matcher-e9c80b09.js";import"./TileStrategy-67e80276.js";import"./TileStore-d37d632e.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-394dcfc7.js";import"./TimeExtent-b83e45a0.js";import"./Field-db318fdd.js";import"./fieldType-11b4c3ca.js";import"./FullTextSearch-7a786b52.js";import"./tileUtils-60097bb2.js";import"./TileClipper-5ee055e7.js";import"./Geometry-daada628.js";import"./LRUCache-9d77066f.js";import"./MemCache-97cd02d3.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-ea2c30a4.js";import"./schemaUtils-cb6f4fa9.js";import"./LayerFloorInfo-21f09518.js";import"./diffUtils-67450e3a.js";import"./createSymbolSchema-7219e927.js";import"./rendererUtils-cc7003e2.js";import"./FeatureReductionLayer-9b4d60f8.js";import"./BlendLayer-1dfdcb30.js";import"./UniqueValueRenderer-07be7be0.js";import"./LegendOptions-8b163282.js";import"./colorRamps-d6116b89.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-05c96a64.js";import"./jsonUtils-30a58fb0.js";import"./DictionaryLoader-076d7343.js";import"./deprecate-c2edfb4d.js";import"./OperationalLayer-421969eb.js";import"./ElevationInfo-7059590d.js";import"./util-dd3059e1.js";import"./ComputedAttributeStorage-16940434.js";import"./FeatureSetReader-4f707d3c.js";import"./centroid-5232e2a4.js";import"./FieldsIndex-bec5c377.js";import"./vec3f32-4322908d.js";const b=Object.freeze({remove(){},pause(){},resume(){}}),U=["route-info","direction-line","direction-point","polygon-barrier","polyline-barrier","point-barrier","stop"],s={graphic:null,property:null,oldValue:null,newValue:null};function l(t){return t instanceof y||t instanceof f||t instanceof k||t instanceof v||t instanceof M||t instanceof I||t instanceof V}function A(t){return n.isCollection(t)&&t.length&&l(t.getItemAt(0))}function $(t){return Array.isArray(t)&&t.length&&l(t[0])}let h=class extends G(F){constructor(){super(...arguments),this._graphics=new n,this._highlightIds=new Map,this._networkFeatureMap=new Map,this._networkGraphicMap=new Map}get _routeItems(){return new u({getCollections:()=>p(this.layer)&&!this.destroyed?[p(this.layer.routeInfo)?new n([this.layer.routeInfo]):null,this.layer.directionLines,this.layer.directionPoints,this.layer.polygonBarriers,this.layer.polylineBarriers,this.layer.pointBarriers,this.layer.stops]:[]})}initialize(){this.updatingHandles.addOnCollectionChange(()=>this._routeItems,t=>this._routeItemsChanged(t),w)}destroy(){var t;this.handles.removeAll(),this.updatingHandles.removeAll(),this._networkFeatureMap.clear(),this._networkGraphicMap.clear(),this._graphics.removeAll(),(t=this._get("_routeItems"))==null||t.destroy()}attach(){this._createGraphicsView()}detach(){this._destroyGraphicsView()}async fetchPopupFeatures(t){return this._graphicsView.hitTest(t).filter(i=>!!i.popupTemplate)}highlight(t){let i;i=l(t)?[this._getNetworkFeatureUid(t)]:$(t)?t.map(e=>this._getNetworkFeatureUid(e)):A(t)?t.map(e=>this._getNetworkFeatureUid(e)).toArray():[t.uid];const r=i.filter(p);return r.length?(this._addHighlight(r),{remove:()=>this._removeHighlight(r)}):b}async hitTest(t,i){if(this.suspended)return null;const r=this._graphicsView.hitTest(t).filter(p).map(o=>this._networkGraphicMap.get(o));if(!r.length)return null;const{layer:e}=this;return r.reverse().map(o=>({type:"route",layer:e,mapPoint:t,networkFeature:o}))}isUpdating(){return this._graphicsView.updating}moveStart(){}moveEnd(){}update(t){this._graphicsView.processUpdate(t)}viewChange(){this._graphicsView.viewChange()}_addHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i);this._highlightIds.set(i,r+1)}else this._highlightIds.set(i,1);this._updateHighlight()}_createGraphic(t){const i=t.toGraphic();return i.layer=this.layer,i.sourceLayer=this.layer,i}_createGraphicsView(){const t=this.view,i=()=>this.requestUpdate(),r=new H(t.featuresTilingScheme);this._graphicsView=new C({container:r,graphics:this._graphics,requestUpdateCallback:i,view:t}),this.container.addChild(r),this._updateHighlight()}_destroyGraphicsView(){this.container.removeChild(this._graphicsView.container),this._graphicsView.destroy()}_getDrawOrder(t){const i=this._networkGraphicMap.get(t);return U.indexOf(i.type)}_getNetworkFeatureUid(t){return this._networkFeatureMap.has(t)?this._networkFeatureMap.get(t).uid:null}_removeHighlight(t){for(const i of t)if(this._highlightIds.has(i)){const r=this._highlightIds.get(i)-1;r===0?this._highlightIds.delete(i):this._highlightIds.set(i,r)}this._updateHighlight()}_routeItemsChanged(t){if(t.removed.length){this._graphics.removeMany(t.removed.map(i=>{const r=this._networkFeatureMap.get(i);return this._networkFeatureMap.delete(i),this._networkGraphicMap.delete(r),r}));for(const i of t.removed)this.handles.remove(i)}if(t.added.length){this._graphics.addMany(t.added.map(i=>{const r=this._createGraphic(i);return _(r.symbol)?null:(this._networkFeatureMap.set(i,r),this._networkGraphicMap.set(r,i),r)}).filter(p));for(const i of t.added)this.handles.add([c(()=>i.geometry,(r,e)=>{this._updateGraphic(i,"geometry",r,e)}),c(()=>i.symbol,(r,e)=>{this._updateGraphic(i,"symbol",r,e)})],i);this._graphics.sort((i,r)=>this._getDrawOrder(i)-this._getDrawOrder(r))}}_updateGraphic(t,i,r,e){if(!this._networkFeatureMap.has(t)){const a=this._createGraphic(t);return this._networkFeatureMap.set(t,a),this._networkGraphicMap.set(a,t),void this._graphics.add(a)}const o=this._networkFeatureMap.get(t);o[i]=r,s.graphic=o,s.property=i,s.oldValue=e,s.newValue=r,this._graphicsView.graphicUpdateHandler(s)}_updateHighlight(){const t=Array.from(this._highlightIds.keys());this._graphicsView.setHighlight(t)}};m([g()],h.prototype,"_graphics",void 0),m([g()],h.prototype,"_routeItems",null),h=m([d("esri.views.2d.layers.RouteLayerView2D")],h);const vr=h;export{vr as default};
