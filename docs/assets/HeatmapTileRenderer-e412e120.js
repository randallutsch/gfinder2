import{e as m,n as p}from"./cast-7ef3a066.js";import"./Error-1dfe2922.js";import"./ArrayPool-45db95ab.js";import"./typedArrayUtil-4015bf74.js";import"./string-7d6c8f5c.js";import{l as a,u as l}from"./heatmapUtils-90a13d85.js";import{n as h}from"./BitmapTileContainer-24d2c26d.js";import{o as d}from"./BaseTileRenderer-1e0e1675.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e323addc.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./vec4f64-018b3fa6.js";import"./aaBoundingRect-e7f76732.js";import"./Extent-54ef1174.js";import"./mat3f32-d3d088e8.js";import"./Bitmap-16faffe0.js";import"./mat3-45e3f2eb.js";import"./vec2f32-461e65a9.js";import"./utils-b31292b4.js";import"./parser-60fed632.js";import"./colorUtils-639f4d25.js";import"./mat4-62d5e6a4.js";import"./Evented-7dfb249a.js";import"./enums-4ca4641f.js";import"./MaterialKey-13d5dd3c.js";import"./Utils-69437480.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-2d4e629f.js";import"./context-util-87dfae31.js";import"./VertexElementDescriptor-2925c6af.js";import"./Color-7a3d8c62.js";import"./TileContainer-5404bedc.js";import"./TileKey-03ab4f60.js";import"./WGLContainer-0eb146a3.js";import"./pixelUtils-d21f4266.js";import"./vec2f64-e0301652.js";import"./VertexArrayObject-27eaf50f.js";import"./ProgramTemplate-921deefe.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./reactiveUtils-b911287d.js";import"./earcut-58237617.js";import"./vec2-f978aef8.js";import"./featureConversionUtils-99b22ab9.js";import"./jsonUtils-196b5f3d.js";import"./Polyline-d942e774.js";import"./OptimizedFeature-aa2e72dc.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./HandleOwner-2d282b7c.js";class c{constructor(){this.gradient=null,this.height=512,this.width=512}render(i){a(i,512,this.intensities,this.gradient,this.minDensity,this.maxDensity)}}let s=class extends d{constructor(t){super(t),this._intensityInfo={minDensity:0,maxDensity:0},this.type="heatmap",this.featuresView={attributeView:{initialize:()=>{},requestUpdate:()=>{}},requestRender:()=>{}},this._container=new h(t.tileInfoView)}createTile(t){const i=this._container.createTile(t);return this.tileInfoView.getTileCoords(i.bitmap,t),i.bitmap.resolution=this.tileInfoView.getTileResolution(t),i}onConfigUpdate(){const t=this.layer.renderer;if(t.type==="heatmap"){const{minDensity:i,maxDensity:r,colorStops:n}=t;this._intensityInfo.minDensity=i,this._intensityInfo.maxDensity=r,this._gradient=l(n),this.tiles.forEach(o=>{const e=o.bitmap.source;e&&(e.minDensity=i,e.maxDensity=r,e.gradient=this._gradient,o.bitmap.invalidateTexture())})}}hitTest(){return Promise.resolve([])}install(t){t.addChild(this._container)}uninstall(t){this._container.removeAllChildren(),t.removeChild(this._container)}disposeTile(t){this._container.removeChild(t),t.destroy()}supportsRenderer(t){return t&&t.type==="heatmap"}onTileData(t){const i=this.tiles.get(t.tileKey);if(!i)return;const r=t.intensityInfo,{minDensity:n,maxDensity:o}=this._intensityInfo,e=i.bitmap.source||new c;e.intensities=r&&r.matrix||null,e.minDensity=n,e.maxDensity=o,e.gradient=this._gradient,i.bitmap.source=e,this._container.addChild(i),this._container.requestRender(),this.requestUpdate()}onTileError(t){console.error(t)}lockGPUUploads(){}unlockGPUUploads(){}fetchResource(t,i){return console.error(t),Promise.reject()}};s=m([p("esri.views.2d.layers.features.tileRenderers.HeatmapTileRenderer")],s);const ct=s;export{ct as default};
