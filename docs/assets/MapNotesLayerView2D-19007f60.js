import{e as f,n as w}from"./cast-7ef3a066.js";import{g as y}from"./Graphic-17f3b359.js";import{j as _}from"./Collection-8f94e599.js";import{r as m,t as V}from"./typedArrayUtil-4015bf74.js";import{l as h,h as a,a as v}from"./reactiveUtils-b911287d.js";import"./Error-1dfe2922.js";import"./ArrayPool-45db95ab.js";import"./string-7d6c8f5c.js";import{i as C}from"./utils-b31292b4.js";import{r as b}from"./GroupContainer-1968fd48.js";import{y as H,u as T}from"./LayerView-3ffe8f9a.js";import{i as c}from"./GraphicContainer-17b5ffa9.js";import{o as g}from"./BaseGraphicContainer-9a57caae.js";import"./nextTick-3ee5a785.js";import"./promiseUtils-e323addc.js";import"./geometry-22feb2bb.js";import"./Extent-54ef1174.js";import"./Polyline-d942e774.js";import"./typeUtils-17403a33.js";import"./jsonMap-c8081704.js";import"./PopupTemplate-9da636f6.js";import"./Clonable-c315fc8d.js";import"./fieldUtils-75feb382.js";import"./preload-helper-101896b7.js";import"./arcadeOnDemand-797f4f1c.js";import"./enumeration-cda3949b.js";import"./number-1bdcdfd9.js";import"./locale-30120714.js";import"./Identifiable-d701141a.js";import"./symbols-87ca67f4.js";import"./CIMSymbol-52d72a23.js";import"./Symbol-6522d2f3.js";import"./Color-7a3d8c62.js";import"./colorUtils-639f4d25.js";import"./mathUtils-daf59e84.js";import"./common-701a4199.js";import"./screenUtils-7afeb41c.js";import"./opacityUtils-2c2d0d87.js";import"./aaBoundingBox-10130714.js";import"./request-4f5c54dd.js";import"./persistableUrlUtils-afa98d6c.js";import"./collectionUtils-07fb1a58.js";import"./Portal-0c20e3a4.js";import"./Loadable-772aaf20.js";import"./Promise-e08b9d4d.js";import"./PortalGroup-100f1bed.js";import"./PortalUser-7acb0e3c.js";import"./jsonUtils-196b5f3d.js";import"./Evented-7dfb249a.js";import"./SimpleObservable-ddf0ceba.js";import"./mat3f32-d3d088e8.js";import"./parser-60fed632.js";import"./mat4-62d5e6a4.js";import"./enums-4ca4641f.js";import"./MaterialKey-13d5dd3c.js";import"./Utils-69437480.js";import"./enums-ef042d89.js";import"./enums-64ab819c.js";import"./Texture-2d4e629f.js";import"./context-util-87dfae31.js";import"./VertexElementDescriptor-2925c6af.js";import"./heatmapUtils-90a13d85.js";import"./vec4f64-018b3fa6.js";import"./WGLContainer-0eb146a3.js";import"./mat3-45e3f2eb.js";import"./vec2f32-461e65a9.js";import"./pixelUtils-d21f4266.js";import"./vec2f64-e0301652.js";import"./VertexArrayObject-27eaf50f.js";import"./ProgramTemplate-921deefe.js";import"./StyleDefinition-ae208a94.js";import"./config-1337d16e.js";import"./GeometryUtils-c093d234.js";import"./earcut-58237617.js";import"./vec2-f978aef8.js";import"./featureConversionUtils-99b22ab9.js";import"./OptimizedFeature-aa2e72dc.js";import"./OptimizedFeatureSet-1d1ac4b9.js";import"./HandleOwner-2d282b7c.js";import"./ExpandedCIM-e40bb4ca.js";import"./BidiEngine-836b7ef6.js";import"./aaBoundingRect-e7f76732.js";import"./mat2d-80bd93af.js";import"./Rect-ea14f53a.js";import"./quantizationUtils-14228c88.js";import"./GeometryUtils-eebff0a0.js";import"./floatRGBA-305df8f3.js";import"./normalizeUtilsSync-106b4c98.js";import"./normalizeUtils-9ff08cf4.js";import"./projectionSupport-22303543.js";import"./projection-ef32d842.js";import"./unitUtils-58dc72ed.js";import"./assets-6d4d2dad.js";import"./zscale-65468675.js";import"./json-48e3ea08.js";import"./labelingInfo-f5cd653d.js";import"./labelUtils-d3906ba4.js";import"./defaultsJSON-b087dd4d.js";import"./jsonUtils-d1659db1.js";import"./FeatureContainer-9ffbac33.js";import"./TileContainer-5404bedc.js";import"./TileKey-03ab4f60.js";import"./Queue-26a7c9c9.js";import"./visualVariablesUtils-cd632025.js";import"./visualVariablesUtils-b964ebb8.js";import"./lengthUtils-f3b6e37f.js";import"./capabilities-dddb0ea5.js";import"./Matcher-94f40cdf.js";import"./TileStrategy-b2d2fa5e.js";import"./TileStore-e480c2b6.js";import"./rbush-8e36784a.js";import"./quickselect-322ec8e1.js";import"./Query-8a7aa408.js";import"./TimeExtent-dfe3f644.js";import"./Field-a857bb5a.js";import"./fieldType-36e8171c.js";import"./tileUtils-d57fc766.js";import"./TileClipper-b8854753.js";import"./Geometry-daada628.js";import"./LRUCache-f9ba273b.js";import"./MemCache-15515535.js";import"./devEnvironmentUtils-5002a058.js";import"./styleUtils-5b0ea69d.js";import"./schemaUtils-85d1403c.js";import"./LayerFloorInfo-152559a6.js";import"./diffUtils-f2c670bd.js";import"./createSymbolSchema-0ec759f8.js";import"./rendererUtils-0c1268cc.js";import"./FeatureReductionLayer-be2d99dd.js";import"./BlendLayer-00b35d0f.js";import"./UniqueValueRenderer-5b8937c2.js";import"./LegendOptions-998df0a8.js";import"./colorRamps-68d0ae1f.js";import"./sizeVariableUtils-d4870b0d.js";import"./compilerUtils-c5090cf5.js";import"./jsonUtils-b516d686.js";import"./DictionaryLoader-3932e3bb.js";import"./deprecate-9e0289e6.js";import"./OperationalLayer-0fbaa211.js";import"./ElevationInfo-a7cee627.js";import"./util-72a186a3.js";import"./ComputedAttributeStorage-002a0545.js";import"./FeatureSetReader-67ae9e70.js";import"./centroid-e729b670.js";import"./FieldsIndex-7523f868.js";import"./vec3f32-4322908d.js";const d="sublayers",n="layerView",I=Object.freeze({remove(){},pause(){},resume(){}});let l=class extends H(T){constructor(){super(...arguments),this._highlightIds=new Map,this.container=new b}async fetchPopupFeatures(i){return Array.from(this.graphicsViews(),t=>t.hitTest(i).filter(r=>!!r.popupTemplate)).flat()}*graphicsViews(){m(this._graphicsViewsFeatureCollectionMap)?yield*this._graphicsViewsFeatureCollectionMap.keys():m(this._graphicsViews)?yield*this._graphicsViews:yield*[]}async hitTest(i,t){return Array.from(this.graphicsViews(),r=>{const e=r.hitTest(i);if(m(this._graphicsViewsFeatureCollectionMap)){const p=this._graphicsViewsFeatureCollectionMap.get(r);for(const o of e)!o.popupTemplate&&p.popupTemplate&&(o.popupTemplate=p.popupTemplate),o.sourceLayer=o.layer=this.layer}return e}).flat().map(r=>({type:"graphic",graphic:r,layer:this.layer,mapPoint:i}))}highlight(i){let t;return typeof i=="number"?t=[i]:i instanceof y?t=[i.uid]:Array.isArray(i)&&i.length>0?t=typeof i[0]=="number"?i:i.map(r=>r&&r.uid):_.isCollection(i)&&(t=i.map(r=>r&&r.uid).toArray()),t=t.filter(r=>r!=null),t.length?(this._addHighlight(t),{remove:()=>{this._removeHighlight(t)}}):I}update(i){for(const t of this.graphicsViews())t.processUpdate(i)}attach(){const i=this.view,t=()=>this.requestUpdate(),r=this.layer.featureCollections;if(m(r)&&r.length){this._graphicsViewsFeatureCollectionMap=new Map;for(const e of r){const p=new c(this.view.featuresTilingScheme),o=new g({view:i,graphics:e.source,renderer:e.renderer,requestUpdateCallback:t,container:p});this._graphicsViewsFeatureCollectionMap.set(o,e),this.container.addChild(o.container),this.handles.add([h(()=>e.visible,s=>o.container.visible=s,a),h(()=>o.updating,()=>this.notifyChange("updating"),a)],n)}this._updateHighlight()}else m(this.layer.sublayers)&&this.handles.add(v(()=>this.layer.sublayers,"change",()=>this._createGraphicsViews(),{onListenerAdd:()=>this._createGraphicsViews(),onListenerRemove:()=>this._destroyGraphicsViews()}),d)}detach(){this._destroyGraphicsViews(),this.handles.remove(d)}moveStart(){}moveEnd(){}viewChange(){for(const i of this.graphicsViews())i.viewChange()}isUpdating(){for(const i of this.graphicsViews())if(i.updating)return!0;return!1}_destroyGraphicsViews(){this.container.removeAllChildren(),this.handles.remove(n);for(const i of this.graphicsViews())i.destroy();this._graphicsViews=null,this._graphicsViewsFeatureCollectionMap=null}_createGraphicsViews(){if(this._destroyGraphicsViews(),V(this.layer.sublayers))return;const i=[],t=this.view,r=()=>this.requestUpdate();for(const e of this.layer.sublayers){const p=new C,o=new c(this.view.featuresTilingScheme);o.fadeTransitionEnabled=!0;const s=new g({view:t,graphics:e.graphics,requestUpdateCallback:r,container:o});this.handles.add([e.on("graphic-update",s.graphicUpdateHandler),h(()=>e.visible,u=>s.container.visible=u,a),h(()=>s.updating,()=>this.notifyChange("updating"),a)],n),p.addChild(s.container),this.container.addChild(p),i.push(s)}this._graphicsViews=i,this._updateHighlight()}_addHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t);this._highlightIds.set(t,r+1)}else this._highlightIds.set(t,1);this._updateHighlight()}_removeHighlight(i){for(const t of i)if(this._highlightIds.has(t)){const r=this._highlightIds.get(t)-1;r===0?this._highlightIds.delete(t):this._highlightIds.set(t,r)}this._updateHighlight()}_updateHighlight(){const i=Array.from(this._highlightIds.keys());for(const t of this.graphicsViews())t.setHighlight(i)}};l=f([w("esri.views.2d.layers.MapNotesLayerView2D")],l);const lr=l;export{lr as default};
